[{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to SSMSE","title":"Contributing to SSMSE","text":"Thank interest contributing SSMSE! strive follow NMFS Fisheries Toolbox Contribution Guide. also included SSMSE-specific contribution information Developers page SSMSE wiki. Note guidelines, rules, open collaborations ways may work better . Please feel free reach us opening issue repository emailing developers nmfs.stock.synthsis@noaa.gov. project everyone participating governed NMFS Fisheries Toolbox Code Conduct. participating, expected uphold code. Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement fisheries.toolbox@noaa.gov report anonymously, use form. Note Kathryn Doering access fisheries.toolbox@noaa form. report violations Kathryn, instead fill FIMS code conduct form, goes Christine Stawitz.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kathryn Doering. Author, maintainer. Nathan Vaughan. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Doering K, Vaughan N (2024). SSMSE: Management Strategy Evaluation (MSE) using Stock Synthesis (SS). R package version 0.2.8, https://github.com/nmfs-fish-tools/SSMSE.","code":"@Manual{,   title = {SSMSE: Management Strategy Evaluation (MSE) using Stock Synthesis (SS)},   author = {Kathryn Doering and Nathan Vaughan},   year = {2024},   note = {R package version 0.2.8},   url = {https://github.com/nmfs-fish-tools/SSMSE}, }"},{"path":"/index.html","id":"ssmse-management-strategy-evaluation-for-stock-synthesis","dir":"","previous_headings":"","what":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"SSMSE build status Current support level SSMSE Motivation developing SSMSE cite SSMSE Need Help? Installing SSMSE R package Troubleshooting Installation Setup R workspace folders Create operating models (OMs) Adding process error recruitment deviations time-varying selectivity Examine management procedure used Run SSMSE run_SSMSE output Performance metrics Summarize results Simple Convergence Check Plot Spawning Stock Biomass (SSB) Example MSE Results Delete files Advanced options: use custom management strategy/procedure can contribute SSMSE? Roadmap: SSMSE headed next?","code":""},{"path":[]},{"path":"/index.html","id":"current-support-level-for-ssmse","dir":"","previous_headings":"","what":"Current support level for SSMSE","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"SSMSE currently actively developed. SSMSE maintained bugs fixes - bug fixes addressed, suggestions new features enhancements . Changes staffing future support active development. Disclaimer “United States Department Commerce (DOC) GitHub project code provided ‘’ basis user assumes responsibility use. DOC relinquished control information longer responsibility protect integrity, confidentiality, availability information. claims Department Commerce stemming use GitHub project governed applicable Federal law. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring Department Commerce. Department Commerce seal logo, seal logo DOC bureau, shall used manner imply endorsement commercial product activity DOC United States Government.”","code":""},{"path":"/index.html","id":"motivation-for-developing-ssmse","dir":"","previous_headings":"","what":"Motivation for developing SSMSE","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"package developed increase ease using stock assessment software Stock Synthesis (SS3) directly operating model (OM) Management Strategy Evaluation (MSE). approach requires conditioned Stock Synthesis mode use OM. intended users conduct MSEs. , ’ll work simple example MSE way introducing SSMSE package. additional example included Journal Open Source Software SSMSE paper.","code":""},{"path":"/index.html","id":"how-to-cite-ssmse","dir":"","previous_headings":"","what":"How to cite SSMSE","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Doering et al., (2023). SSMSE: R package Management Strategy Evaluation Stock Synthesis Operating Models. Journal Open Source Software, 8(90), 4937, https://doi.org/10.21105/joss.04937","code":""},{"path":"/index.html","id":"need-help","dir":"","previous_headings":"","what":"Need Help?","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Get questions answered discussions. Submit bug reports feature requests issues. Alternatively, contact develpers via email nmfs.stock.synthesis@noaa.gov.","code":""},{"path":"/index.html","id":"installing-the-ssmse-r-package","dir":"","previous_headings":"","what":"Installing the SSMSE R package","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"install SSMSE github: can read help files Note SSMSE installed, Stock Synthesis binaries included SSMSE/bin/ folder downloaded user’s local R library. Currently, Stock Synthesis 3.30.18 included. Separate binaries included Windows, Mac Linux. Users may swap binaries, SSMSE tested versions SS3.","code":"remotes::install_github(\"nmfs-fish-tools/SSMSE\") ?SSMSE"},{"path":"/index.html","id":"troubleshooting-installation","dir":"","previous_headings":"","what":"Troubleshooting Installation","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"tips: Make sure using main branch versions R packages r4ss ss3sim. can installed separately using remotes::install_github(\"r4ss/r4ss\") remotes::install_github(\"ss3sim/ss3sim\"). R asks “like download sources need compilation?”, select “”, older compiled versions work fine. R asks packages like update, select “none.” Although good update keep packages current, install can sometimes frustrating updating many packages skipping step can eliminate issues short term. running error install, try closing R sessions open (e.g., R GUI R studio windows), restarting R session trying remotes::install_github(\"nmfs-fish-tools/SSMSE\") . still running error install, seems problem installing particular package, try restarting R session, using install.packages() download package caused error, restarting R session, trying remotes::install_github(\"nmfs-fish-tools/SSMSE\") . step may need done several times different R packages. Still trouble installing SSMSE? Please don’t hesitate post discussions issue.","code":""},{"path":"/index.html","id":"an-ssmse-example","dir":"","previous_headings":"","what":"An SSMSE example","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Suppose want look well able achieve performance metric uncertainty operating model (OM). look 2 scenarios, one Steepness (h) specified correctly one specified incorrectly estimation model (EM): Scenario 1. h-ctl: Cod operating model (h = 0.65) correctly specified cod model EM (fixed h = 0.65). OM EM. Scenario 2. h-1: Cod operating model (h = 1) misspecified cod model EM (fixed h = 0.65); OM EM. Note simple example OM EM structures scenarios identical, except different steepness OM EM scenario 2 process error include operating model. assume want run MSE loop 6 years, stock assessment occuring every 3 years (forecasting catch maintain 40% unfished spawning stock biomass). cod model’s last year 100, OM initially conditioned year 100. , conditioning operating model year 100, assessments occur years 100 103. operating model runs year 106. chose run assessment year 106, need output example.","code":""},{"path":"/index.html","id":"setup-r-workspace-folders","dir":"","previous_headings":"","what":"Setup R workspace folders","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"First, load SSMSE package create folder run example:","code":"library(SSMSE) # load the package ## Welcome to SSMSE version 0.2.8 using Stock Synthesis 3.30.18. library(r4ss) # install using remotes::install_github(\"r4ss/r4ss) ##  ## Attaching package: 'r4ss' ## The following object is masked from 'package:stats': ##  ##     profile ## The following object is masked from 'package:base': ##  ##     jitter # library(foreach) #if using run_parallel = TRUE # library(doParallel) #if using run_parallel = TRUE # Create a folder for the output in the working directory. run_SSMSE_dir <- file.path(\"run_SSMSE-ex\") dir.create(run_SSMSE_dir)"},{"path":[]},{"path":"/index.html","id":"specify-alternative-values-for-h","dir":"","previous_headings":"Create the operating models (OMs)","what":"Specify alternative values for h","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"cod model h = 0.65 (scenario 1) included external package data SSMSE. However, need modify use operating model h = 1 (scenario 2). Note case refit_OM false, model refit, just run without fitting. condition new model data input model, refit_OM TRUE. First, identify base cod model stored, modify steepness parameter 1, save modified cod OM scenario 2 new folder run_SSMSE_dir directory.","code":"cod_mod_path <- system.file(\"extdata\", \"models\", \"cod\", package = \"SSMSE\") # develop_OMs will save a model called \"cod_SR_BH_steep_1\" in the out_dir # specified develop_OMs(   OM_name = \"cod\", out_dir = run_SSMSE_dir, par_name = \"SR_BH_steep\",   par_vals = 1, refit_OMs = FALSE, hess = FALSE ) # OM model for scenario 2 cod_1_path <- file.path(run_SSMSE_dir, \"cod_SR_BH_steep_1\")"},{"path":"/index.html","id":"adding-process-error-through-recruitment-deviations-and-time-varying-selectivity","dir":"","previous_headings":"","what":"Adding process error through recruitment deviations and time-varying selectivity","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Recruitment deviations, implementation error, changes parameters projection period OM can added future_om_list input run_SSMSE. First, ’ll set list add recruitment deviations projection period. recruitment deviation patterns used across scenarios, different patterns use across iterations scenario. also want deviations standard deviations historical deviations 0 mean (assumed default). Next, suppose want allow selectivity vary annually 1 selectivity parameter fishery throughout projection period. following specifies value selectivity varies randomly around base value sd 0.2. Finally, add two changes together object pass run_SSMSE","code":"# Start from a list created by a helper function template_mod_change <- create_future_om_list() # add recruitment deviations rec_dev_specify <- template_mod_change[[1]] rec_dev_specify$pars <- \"rec_devs\" # apply change to rec devs rec_dev_specify$scen <- c(\"replicate\", \"all\") # using 1 to 100 means the sd or mean will be calculated by taking the sd across years # from 1 to 100 rec_dev_specify$input$first_yr_averaging <- 1 rec_dev_specify$input$last_yr_averaging <- 100 # The following 2 lines suggest that this change is immediately applied in year # 101, with no transitory period for using sd 0 to the new sd. rec_dev_specify$input$last_yr_orig_val <- 100 rec_dev_specify$input$first_yr_final_val <- 101 rec_dev_specify$input$ts_param <- \"sd\" # this change is for the sd # no input value needed since it will be calclated from the historical rec devs. rec_dev_specify$input$value <- NA rec_dev_specify ## $pars ## [1] \"rec_devs\" ##  ## $scen ## [1] \"replicate\" \"all\"       ##  ## $pattern ## [1] \"model_change\" ##  ## $input ##   first_yr_averaging last_yr_averaging last_yr_orig_val first_yr_final_val ## 1                  1               100              100                101 ##   ts_param   method value ## 1       sd absolute    NA # put together the change for selectivity (random values around the orig val, with # an sd of 0.2) mod_change_sel <- template_mod_change[[1]] mod_change_sel$scen[2] <- \"all\" # apply to all scenarios # The following 2 lines suggest that this change is immediately applied in year # 101, with no transitory period for using sd 0 to the new sd. # historical values are NA in this case, because they are not used to determine # the sd to use. mod_change_sel$input$last_yr_orig_val <- 100 mod_change_sel$input$first_yr_final_val <- 101 mod_change_sel$input$ts_param <- \"sd\" # this change is for the sd mod_change_sel$input$value <- 0.2 # se to use in the projection period mod_change_sel ## $pars ## [1] \"SizeSel_P_3_Fishery(1)\" ##  ## $scen ## [1] \"replicate\" \"all\"       ##  ## $pattern ## [1] \"model_change\" ##  ## $input ##   first_yr_averaging last_yr_averaging last_yr_orig_val first_yr_final_val ## 1                 NA                NA              100                101 ##   ts_param   method value ## 1       sd absolute   0.2 future_om_list_recdevs_sel <- list(   rec_dev_specify,   mod_change_sel )"},{"path":"/index.html","id":"add-observation-error-through-sampling-from-om","dir":"","previous_headings":"Adding process error through recruitment deviations and time-varying selectivity","what":"Add observation error through sampling from OM","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"argument sample_struct specifies structure sampling OM (passing EM). function create_sample_struct can used construct simple sampling structure consistent input data file: default, create_sample_struct identifies sampling patterns historical period OM replicates patterns projection period. cod example, sample structure specifies catch added estimation model every year (years 101 106), index abundance (.e., CPUE) age composition (.e., agecomp) added year 105. use sampling scheme scenarios, possible specify different sampling scenario. user modify sampling strategy (example, maybe age composition also sampled FltSvy 2 Yr 102; user add another line dataframe sample_struct$agecomp). Note length comp (lencomp) includes NA value year. consistent pattern identified, user must define input. case, remove sampling length comps together: sampling structure used scenarios, define list :","code":"datfile <- system.file(\"extdata\", \"models\", \"cod\", \"ss3.dat\", package = \"SSMSE\") sample_struct_1_scen <- create_sample_struct(dat = datfile, nyrs = 6) # note warning ## Warning in FUN(X[[i]], ...): Pattern not found for lencomp: FltSvy 1, Seas 1. ## Returning NA for Yr in this dataframe. sample_struct_1_scen ## $catch ##    Yr Seas FltSvy    SE ## 1 101    1      1 0.005 ## 2 102    1      1 0.005 ## 3 103    1      1 0.005 ## 4 104    1      1 0.005 ## 5 105    1      1 0.005 ## 6 106    1      1 0.005 ##  ## $CPUE ##    Yr Seas FltSvy  SE ## 1 105    7      2 0.2 ##  ## $lencomp ##   Yr Seas FltSvy Sex Part Nsamp ## 1 NA    1      1   0    0   125 ##  ## $agecomp ##    Yr Seas FltSvy Sex Part Ageerr Lbin_lo Lbin_hi Nsamp ## 1 105    1      2   0    0      1      -1      -1   500 ##  ## $meanbodywt ## [1] NA ##  ## $MeanSize_at_Age_obs ## [1] NA sample_struct_1_scen$lencomp <- NULL # don't use length sampling sample_struct_list_all <- list(\"h-ctl\" = sample_struct_1_scen, \"h-1\" = sample_struct_1_scen)"},{"path":"/index.html","id":"examine-the-management-procedure-used","dir":"","previous_headings":"","what":"Examine the management procedure used","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"use management procedure scenarios: Conduct stock assessment every 3 years get stock status. Project stock assessment using SS3 forecast file get projected future catch. Put projected catch (without implementation error, case example) back OM. Extend OM forward time get true values population. Let’s take look step 2 management procedure, implemented using forecasting module SS. examine forecast file estimation model better understand catches forecasted assessment. use management procedure scenarios, although full MSE analysis, likely multiple management procedures compared. fore$Forecast = 3 means forecasts assessment use fishing mortality (F) attmpt achieve relative (unfished) spawning stock biomass. Based fore$Btarget, relative biomass target 40% unfished spawning stock biomass. Note also control rule fore$BforconstantF fore$BfornoF values set low make unlikely used (parameters used ramp harvest control rule, want use ): Futhermore, fore$Flimitfraction set 1 forecasted catch set equal overfishing limit (simplicity): Note number forecast years 1: However, assessment conducted every 3 years thus 3 years projections required. SSMSE automatically modify value estimation model appropriate number forecasting years. information using forecast module SS3 forecast catches available Stock Synthesis users manual. Users can also specify custom management procedures.","code":"fore <- r4ss::SS_readforecast(   system.file(\"extdata\", \"models\", \"cod\", \"forecast.ss\", package = \"SSMSE\"),   verbose = FALSE ) fore$Forecast ## [1] 3 fore$Btarget ## [1] 0.4 fore$BforconstantF ## [1] 0.03 fore$BfornoF ## [1] 0.01 fore$Flimitfraction ## [1] 1 fore$Nforecastyrs ## [1] 1"},{"path":"/index.html","id":"run-ssmse","dir":"","previous_headings":"","what":"Run SSMSE","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Now, create directory store results, use run_SSMSE run MSE analysis loop (note take time run, ~ 20 min): See ?run_SSMSE details function arguments. real MSE analysis, running 100+ iterations reflect full range uncertainty (given observation process errors) results preferred. However, running 5 iterations per scenario demonstration reduce computing time.","code":"run_res_path <- file.path(run_SSMSE_dir, \"results\") dir.create(run_res_path) res <- run_SSMSE(   scen_name_vec = c(\"h-ctl\", \"h-1\"), # name of the scenario   out_dir_scen_vec = run_res_path, # directory in which to run the scenario   iter_vec = c(5, 5), # run with 5 iterations each   OM_name_vec = NULL, # specify directories instead   OM_in_dir_vec = c(cod_mod_path, normalizePath(cod_1_path)), # OM files   EM_name_vec = c(\"cod\", \"cod\"), # cod is included in package data   MS_vec = c(\"EM\", \"EM\"), # The management strategy is specified in the EM   nyrs_vec = c(6, 6), # Years to project OM forward   nyrs_assess_vec = c(3, 3), # Years between assessments   future_om_list = future_om_list_recdevs_sel,   run_parallel = FALSE, # Run iterations in parallel   sample_struct_list = sample_struct_list_all, # How to sample data for running the EM.   sample_struct_hist_list = NULL, # because this is null, will just use sampling   # as in the current OM data file for the historical period.   seed = 12345 ) # Set a fixed integer seed that allows replication"},{"path":"/index.html","id":"run_ssmse-output","dir":"","previous_headings":"","what":"run_SSMSE output","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"run_SSMSE create new folders folders specified out_dir_scen_vec (note case, running scenarios folder). complete, folder scenario run_res_path (since out_dir_scen_vec = run_res_path example): Within scenario folder scenario: within scenario folder, folders containing SS3 models run run_SSMSE. 1 folder OM, run multiple times folder MSE analysis. multiple folders EMs, new folder created time assessment done. first run folder name ending init; , assessment named updated end year model. many iterations, number files adds ; future, hope add options save less output.","code":"list.dirs(run_res_path, recursive = FALSE) ## [1] \"run_SSMSE-ex/results/h-1\"   \"run_SSMSE-ex/results/h-ctl\" # See folders for scenario 1. list.dirs(file.path(run_res_path, \"h-ctl\"), recursive = FALSE) ## [1] \"run_SSMSE-ex/results/h-ctl/1\" \"run_SSMSE-ex/results/h-ctl/2\" ## [3] \"run_SSMSE-ex/results/h-ctl/3\" \"run_SSMSE-ex/results/h-ctl/4\" ## [5] \"run_SSMSE-ex/results/h-ctl/5\" # see folders for the first iteration of scenario 1 list.dirs(file.path(run_res_path, \"h-ctl\", \"1\"), recursive = FALSE) ## [1] \"run_SSMSE-ex/results/h-ctl/1/cod_EM_103\"  ## [2] \"run_SSMSE-ex/results/h-ctl/1/cod_EM_init\" ## [3] \"run_SSMSE-ex/results/h-ctl/1/cod_OM\""},{"path":"/index.html","id":"performance-metrics","dir":"","previous_headings":"","what":"Performance metrics","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Quantitative performance metrics specified conducting MSE. Typically, suite performance metrics examined; however, simplicity example, look achieved relative biomass last 3 years projection MSE determine compares intended management target 40% unfished Spawning Stock Biomass. Note running MSE projection 6 years, longer projections typical MSE analyses.","code":""},{"path":"/index.html","id":"summarize-results","dir":"","previous_headings":"","what":"Summarize results","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"function SSMSE_summary_all can used summarize model results list 3 dataframes, one scalar outputs (named scalar), one timeseries outputs (ts), one derived quantities (dq). function also creates summary csv files folder results stored. Plotting data manipulation can done summaries. example, SSB time model can plotted. models include Operating Model (cod_OM), Estimation model (EM) historical period years 0-100 (cod_EM_init), EM run last year data year 103 (cod_EM_103). operating models shown blue black (depending scenario), estimation model runs shown orange, scenarios shown different subplots:","code":"# Summarize 1 iteration of output summary <- SSMSE_summary_all(run_res_path) ## Extracting results from 2 scenarios ## Starting h-1 with 5 iterations ## Starting h-ctl with 5 iterations library(ggplot2) # use install.packages(\"ggplot2\") to install package if needed library(tidyr) # use install.packages(\"tidyr\") to install package if needed library(dplyr) # use install.packages(\"dplyr\") to install package if needed ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union"},{"path":"/index.html","id":"simple-convergence-check","dir":"","previous_headings":"","what":"Simple Convergence Check","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Check params bounds SSB way small way large","code":"check_convergence <- function(summary, min_yr = 101, max_yr = 120, n_EMs = 5) {   require(dplyr) # note: not the best way to do this   if (any(!is.na(summary$scalar$params_on_bound))) {     warning(\"Params on bounds\")   } else {     message(\"No params on bounds\")   }   summary$ts$model_type <- ifelse(grepl(\"_EM_\", summary$ts$model_run), \"EM\", \"OM\")   calc_SSB <- summary$ts %>%     filter(year >= min_yr & year <= max_yr) %>%     select(iteration, scenario, year, model_run, model_type, SpawnBio)   OM_vals <- calc_SSB %>%     filter(model_type == \"OM\") %>%     rename(SpawnBio_OM = SpawnBio) %>%     select(iteration, scenario, year, SpawnBio_OM)   EM_vals <- calc_SSB %>%     filter(model_type == \"EM\") %>%     rename(SpawnBio_EM = SpawnBio) %>%     select(iteration, scenario, year, model_run, SpawnBio_EM)   bind_vals <- full_join(EM_vals, OM_vals, by = c(\"iteration\", \"scenario\", \"year\")) %>%     mutate(SSB_ratio = SpawnBio_EM / SpawnBio_OM)   filter_SSB <- bind_vals %>%     filter(SSB_ratio > 2 | SSB_ratio < 0.5)   if (nrow(filter_SSB) > 0) {     warning(\"Some large/small SSBs relative to OM\")   } else {     message(\"All SSBs in EM are no greater than double and no less than half SSB vals in the OM\")   }   return_val <- bind_vals } values <- check_convergence(summary = summary, min_yr = 101, max_yr = 106, n_EMs = 5) ## No params on bounds ## All SSBs in EM are no greater than double and no less than half SSB vals in the OM"},{"path":"/index.html","id":"plot-spawning-stock-biomass-ssb","dir":"","previous_headings":"","what":"Plot Spawning Stock Biomass (SSB)","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"plot shows SSB estimated match perfectly operating model. similar plot made parameter interest.  Now, calculate plot performance metric, average spawning stock biomass (SSB) years 104 106.  plot, see differences average SSb 2 scenarios.","code":"# plot SSB by year and model run ggplot2::ggplot(   data = subset(summary$ts, model_run %in% c(\"cod_OM\", \"cod_SR_BH_steep_1_OM\", \"cod_EM_103\")),   ggplot2::aes(x = year, y = SpawnBio) ) +   ggplot2::geom_vline(xintercept = 100, color = \"gray\") +   ggplot2::geom_line(ggplot2::aes(linetype = as.character(iteration), color = model_run)) +   ggplot2::scale_color_manual(values = c(\"#D65F00\", \"black\", \"blue\")) +   ggplot2::scale_linetype_manual(values = rep(\"solid\", 50)) +   ggplot2::guides(linetype = FALSE) +   ggplot2::facet_wrap(. ~ scenario) +   ggplot2::theme_classic() ## Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as ## of ggplot2 3.3.4. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. # get_SSB_avg calculates the SSB in each year for each # iteration of the operating model, then takes the average over the years from # min_yr, to max_year. It uses the summary object as input to do these # calculations. get_SSB_avg <- function(summary, min_yr, max_yr) {   OM_vals <- unique(summary$ts$model_run)   OM_vals <- grep(\"_OM$\", OM_vals, value = TRUE)   SSB_yr <- summary$ts %>%     filter(year >= min_yr & year <= max_yr) %>%     filter(model_run %in% OM_vals) %>%     select(iteration, scenario, year, SpawnBio) %>%     group_by(iteration, scenario) %>%     summarize(avg_SSB = mean(SpawnBio), .groups = \"keep\") %>%     ungroup()   SSB_yr } avg_SSB <- get_SSB_avg(summary, min_yr = 104, max_yr = 106)  # function to summarize data in plot data_summary <- function(x) {   m <- mean(x)   ymin <- m - sd(x)   ymax <- m + sd(x)   return(c(y = m, ymin = ymin, ymax = ymax)) } # Now, plot the average relative spawning stock biomass for years 104 - 106 ggplot(data = avg_SSB, aes(x = scenario, y = avg_SSB)) +   stat_summary(     fun.data = data_summary,     position = position_dodge(width = 0.9), color = \"blue\"   ) +   labs(     title = \"Long-term average  SSB\\n(years 104-106)\",     x = \"Scenario\", y = \"SSB\"   ) +   theme_classic()"},{"path":"/index.html","id":"example-mse-results","dir":"","previous_headings":"","what":"Example MSE Results","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"can see performance metric mis-specifying value steepness results higher realized relative spawning stock biomass correctly specifying . gives us idea consequences misspecifying steepness stock assessment.","code":""},{"path":"/index.html","id":"delete-the-files","dir":"","previous_headings":"","what":"Delete the files","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"wish delete files created example, can use:","code":"unlink(run_SSMSE_dir, recursive = TRUE)"},{"path":"/index.html","id":"advanced-options-use-a-custom-management-strategyprocedure","dir":"","previous_headings":"","what":"Advanced options: use a custom management strategy/procedure","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Users can outline custom managment strategy R function use. long correct inputs outputs used, estimation method management procedure can used. example, simple function just sets future catches half sampled catches specified year: function created separate file. case, assume function available file custom_funs.R. function can used call run_SSMSE:","code":"constant_catch_MS <- function(OM_dat, nyrs_assess, catch_yr = 100,                               frac_catch = 0.5, ...) { # need to include ... to allow function to work   # set catch the same as the previous year (sampled catch).   # catch is in the same units as the operating model, in this case it is in   # biomass.   catch <- data.frame(     year = (OM_dat$endyr + 1):(OM_dat$endyr + nyrs_assess), # the years to project the model forward     seas = 1, # hard coded from looking at model     fleet = 1, # hard coded from looking at model     catch = OM_dat$catch[OM_dat$catch$year == catch_yr, \"catch\"] * frac_catch,     catch_se = 0.05   ) # hard coded from looking at model   catch_bio <- catch # catch in biomass. In this case, catch is in biomass for both. Could also be left as NULL   catch_F <- NULL # catch in terms of F, can be left as NULL.   discards <- NULL # discards can be left as NULL if there are no discards   catch_list <- list(     catch = catch,     catch_bio = catch_bio,     catch_F = catch_F,     discards = discards   ) } run_result_custom <- run_SSMSE(   scen_name_vec = \"constant-catch\", # name of the scenario   out_dir_scen_vec = run_res_path, # directory in which to run the scenario   iter_vec = 1,   OM_name_vec = \"cod\", # specify directories instead   OM_in_dir_vec = NULL,   MS_vec = \"constant_catch_MS\", # use the custom function   custom_MS_source = \"custom_funs.R\", # File where the custom function is available.   nyrs_vec = 6, # Years to project OM forward   nyrs_assess_vec = 3, # Years between assessments   future_om_list = future_om_list_recdevs_sel,   sample_struct_list = list(sample_struct_list[[1]]), # How to sample data for running the MS.   seed = 12345 ) # Set a fixed integer seed that allows replication"},{"path":"/index.html","id":"how-can-i-contribute-to-ssmse","dir":"","previous_headings":"","what":"How can I contribute to SSMSE?","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"Currently, feedback using SSMSE working hopeful! Please open issue problem found. developers can also contacted github discussions emailing nmfs.stock.synthesis@noaa.gov. interested contributing, please read NMFS Fisheries Toolbox R Contribution Guide. project everyone participating governed NMFS Fisheries Toolbox Code Conduct. participating, expected uphold code.","code":""},{"path":"/index.html","id":"roadmap-where-is-ssmse-headed-next","dir":"","previous_headings":"","what":"Roadmap: Where is SSMSE headed next?","title":"Management Strategy Evaluation (MSE) using Stock Synthesis (SS)","text":"SSMSE applied number problems. interested using SSMSE, please don’t hesitate reach developers via github discussions emailing nmfs.stock.synthesis@noaa.gov.","code":""},{"path":"/reference/EM.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EM as the management strategy option. — EM","title":"Use EM as the management strategy option. — EM","text":"Use EM management strategy option.","code":""},{"path":"/reference/EM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EM as the management strategy option. — EM","text":"","code":"EM(   EM_out_dir = NULL,   init_loop = TRUE,   OM_dat,   verbose = FALSE,   nyrs_assess,   dat_yrs,   sample_struct = NULL,   seed = NULL,   OM_out_dir,   ... )"},{"path":"/reference/EM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EM as the management strategy option. — EM","text":"EM_out_dir Relative absolute path estimation model, using model outside SSMSE package. init_loop Logical. first initialization loop MSE, init_loop TRUE. loops, FALSE. OM_dat valid SS data file read using r4ss. particular, sampled data. verbose Want verbose output? Defaults FALSE. nyrs_assess number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. dat_yrs years added new model? Ignored init_loop TRUE. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. seed random seed reproducible results possible. OM_out_dir full path directory OM run. ... additional parameters","code":""},{"path":"/reference/EM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Use EM as the management strategy option. — EM","text":"Kathryn Doering","code":""},{"path":"/reference/Interim.html","id":null,"dir":"Reference","previous_headings":"","what":"Interim assessment management strategy — Interim","title":"Interim assessment management strategy — Interim","text":"Interim assessment management strategy","code":""},{"path":"/reference/Interim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interim assessment management strategy — Interim","text":"","code":"Interim(   EM_out_dir = NULL,   EM_init_dir = NULL,   init_loop = TRUE,   OM_dat,   OM_out_dir = NULL,   verbose = FALSE,   nyrs_assess,   dat_yrs,   future_om_list = NULL,   sample_struct = NULL,   interim_struct = NULL,   seed = NULL,   ... )"},{"path":"/reference/Interim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interim assessment management strategy — Interim","text":"EM_out_dir Relative absolute path estimation model, using model outside SSMSE package. EM_init_dir Initialization director retains reference files interim assessments init_loop Logical. first initialization loop MSE, init_loop TRUE. loops, FALSE. OM_dat valid SS data file read using r4ss. particular, sampled data. OM_out_dir full path directory OM run. verbose Want verbose output? Defaults FALSE. nyrs_assess number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. dat_yrs years added new model? Ignored init_loop TRUE. future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. interim_struct optional including many years average , fleet weights, scaling rate (Beta) catch relative index change fleet, reference year fleet (either fixed year <=0 relative end_yr, fixed year stay constant simulation relative year progress simulation). seed random seed reproducible results possible. ... additional parameters","code":""},{"path":"/reference/Interim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interim assessment management strategy — Interim","text":"Nathan Vaughan","code":""},{"path":"/reference/SSMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"SSMSE: A package for Management Strategy Evaluation (MSE) using Stock\nSynthesis (SS) — SSMSE","title":"SSMSE: A package for Management Strategy Evaluation (MSE) using Stock\nSynthesis (SS) — SSMSE","text":"SSMSE R package performing Management Strategy Evaluation (MSE) using Stock Synthesis (SS). SS used Operating Model (OM) , user desires, Estimation model (EM). SSMSE allows existing SS models used basis OM. OMs used MSE framework provided SSMSE evaluate implications management actions population given uncertainty.","code":""},{"path":[]},{"path":"/reference/SSMSE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SSMSE: A package for Management Strategy Evaluation (MSE) using Stock\nSynthesis (SS) — SSMSE","text":"Maintainer: Kathryn Doering kathryn.doering@noaa.gov Authors: Nathan Vaughan nathan.vaughan@noaa.gov","code":""},{"path":"/reference/SSMSE_summary_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get results in a list for 1 scenario — SSMSE_summary_all","title":"Get results in a list for 1 scenario — SSMSE_summary_all","text":"Get results list 1 iteration, using ss3sim::get_results_iter","code":""},{"path":"/reference/SSMSE_summary_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get results in a list for 1 scenario — SSMSE_summary_all","text":"","code":"SSMSE_summary_all(   dir = getwd(),   scenarios = NULL,   run_parallel = FALSE,   n_cores = NULL,   overwrite = FALSE )"},{"path":"/reference/SSMSE_summary_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get results in a list for 1 scenario — SSMSE_summary_all","text":"dir Path directory containing scenarios, either relative absolute. Defaults working directory. scenarios character vector scenarios dir extract summaries. left NULL, summaries extracted folders dir. run_parallel Option use parallel processing iterations. Defaults FALSE n_cores many cores use running parallel defaults n_cores available - 1 (also capped one less number cores available) overwrite Allow existing files overwritten?","code":""},{"path":"/reference/SSMSE_summary_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get results in a list for 1 scenario — SSMSE_summary_all","text":"list 3 data frames called scalar, ts, dq (derived quantities). lists contain information multiple model runs (estimation models operating models) 1 iteration.Also writes 3 .csv files contents list dataframes dir 3.csv files scenario specific results scenario foldurs..","code":""},{"path":[]},{"path":"/reference/SSMSE_summary_iter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get results in a list for 1 iteration — SSMSE_summary_iter","title":"Get results in a list for 1 iteration — SSMSE_summary_iter","text":"Get results list 1 iteration, using ss3sim::get_results_iter","code":""},{"path":"/reference/SSMSE_summary_iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get results in a list for 1 iteration — SSMSE_summary_iter","text":"","code":"SSMSE_summary_iter(dir)"},{"path":"/reference/SSMSE_summary_iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get results in a list for 1 iteration — SSMSE_summary_iter","text":"dir Path directory 1 iteration 1 scenario.","code":""},{"path":"/reference/SSMSE_summary_iter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get results in a list for 1 iteration — SSMSE_summary_iter","text":"list 3 data frames called scalar, timeseries, derived (derived quantities). lists contain information multiple model runs (estimation models operating models) 1 iteration.","code":""},{"path":[]},{"path":"/reference/SSMSE_summary_scen.html","id":null,"dir":"Reference","previous_headings":"","what":"Get results in a list for 1 scenario — SSMSE_summary_scen","title":"Get results in a list for 1 scenario — SSMSE_summary_scen","text":"Get results list 1 iteration, using ss3sim::get_results_iter","code":""},{"path":"/reference/SSMSE_summary_scen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get results in a list for 1 scenario — SSMSE_summary_scen","text":"","code":"SSMSE_summary_scen(dir = getwd())"},{"path":"/reference/SSMSE_summary_scen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get results in a list for 1 scenario — SSMSE_summary_scen","text":"dir Path directory 1 scenario, either relative absolute. Defaults working directory.","code":""},{"path":"/reference/SSMSE_summary_scen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get results in a list for 1 scenario — SSMSE_summary_scen","text":"list 3 data frames called scalar, ts, dq (derived quantities). lists contain information multiple model runs (estimation models operating models) 1 iteration.Also writes 3 .csv files contents list dataframes dir.","code":""},{"path":[]},{"path":"/reference/Sim_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate uncertainty and biases in historic composition data — Sim_comp","title":"Calculate uncertainty and biases in historic composition data — Sim_comp","text":"Calculate uncertainty biases historic composition data","code":""},{"path":"/reference/Sim_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate uncertainty and biases in historic composition data — Sim_comp","text":"","code":"Sim_comp(   Comp_uncert,   data_exp,   bins,   years = NULL,   seasons = NULL,   fleets = NULL,   genders = NULL )"},{"path":"/reference/Sim_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate uncertainty and biases in historic composition data — Sim_comp","text":"Comp_uncert list object representing output calc_comp_var function data_exp vector representing expected composition values draw random observation dataset bins vector object including composition bins years vector years simulate data . default years data_exp NULL. seasons vector seasons simulate data . default seasons data_exp  NULL. fleets vector fleets simulate data . default fleets data_exp  NULL. genders vector genders simulate data . default genders data_exp  NULL.","code":""},{"path":"/reference/Sim_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate uncertainty and biases in historic composition data — Sim_comp","text":"list object uncertainty bias characteristics inform data simulation.","code":""},{"path":"/reference/Sim_comp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate uncertainty and biases in historic composition data — Sim_comp","text":"Nathan R. Vaughan","code":""},{"path":"/reference/add_OM_devs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add in future parameter values — add_OM_devs","title":"Add in future parameter values — add_OM_devs","text":"Add future parameter values","code":""},{"path":"/reference/add_OM_devs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add in future parameter values — add_OM_devs","text":"","code":"add_OM_devs(ctl, dat, parlist, timeseries, future_om_dat)"},{"path":"/reference/add_OM_devs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add in future parameter values — add_OM_devs","text":"ctl control file read r4ss::SS_readctl. dat data file read r4ss::SS_readdat. parlist parameter file read r4ss::SS_readpar_3.30 timeseries timeseries table r4ss::SS_output(). future_om_dat data frame random sample data future parameter","code":""},{"path":"/reference/add_OM_devs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add in future parameter values — add_OM_devs","text":"Nathan Vaughan","code":""},{"path":"/reference/add_dev_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the deviation changes from the list obj to an existing df — add_dev_changes","title":"Add the deviation changes from the list obj to an existing df — add_dev_changes","text":"Add deviation changes list obj existing df","code":""},{"path":"/reference/add_dev_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the deviation changes from the list obj to an existing df — add_dev_changes","text":"","code":"add_dev_changes(fut_list, scen, iter, parlist, dat, vals_df, nyrs, ctl)"},{"path":"/reference/add_dev_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the deviation changes from the list obj to an existing df — add_dev_changes","text":"fut_list single change input scen scenario name iter iteration name parlist parameter file read r4ss::SS_readpar_3.30 dat data file read r4ss::SS_readdat. vals_df dataframe future om values nyrs number years extend model forward ctl control file read r4ss::SS_readctl.","code":""},{"path":"/reference/add_dev_changes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the deviation changes from the list obj to an existing df — add_dev_changes","text":"modified version vals_df new changes applied.","code":""},{"path":"/reference/add_dev_changes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add the deviation changes from the list obj to an existing df — add_dev_changes","text":"Kathryn Doering","code":""},{"path":"/reference/add_new_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new data to an existing EM dataset — add_new_dat","title":"Add new data to an existing EM dataset — add_new_dat","text":"used feedback loops EM used.","code":""},{"path":"/reference/add_new_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new data to an existing EM dataset — add_new_dat","text":"","code":"add_new_dat(   OM_dat,   EM_datfile,   sample_struct,   EM_dir,   nyrs_assess,   do_checks = TRUE,   new_datfile_name = NULL,   verbose = FALSE )"},{"path":"/reference/add_new_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new data to an existing EM dataset — add_new_dat","text":"OM_dat valid SS data file read using r4ss. particular, sampled data. EM_datfile Datafile name run previous iterations EM. Assumed exist EM_dir. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. EM_dir Absolute relative path Estimation model directory. nyrs_assess number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. do_checks checks data performed? Defaults TRUE. new_datfile_name optional name file write new datafile . NULL, new datafile written. verbose Want verbose output? Defaults FALSE.","code":""},{"path":"/reference/add_new_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new data to an existing EM dataset — add_new_dat","text":"new SS datafile containing data EM_datfile new data OM_dat appended","code":""},{"path":"/reference/add_new_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add new data to an existing EM dataset — add_new_dat","text":"Kathryn Doering","code":""},{"path":"/reference/add_sample_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Add in years of sampling data needed — add_sample_struct","title":"Add in years of sampling data needed — add_sample_struct","text":"Add years sampling data needed","code":""},{"path":"/reference/add_sample_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add in years of sampling data needed — add_sample_struct","text":"","code":"add_sample_struct(sample_struct, dat)"},{"path":"/reference/add_sample_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add in years of sampling data needed — add_sample_struct","text":"sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. dat datafile read r4ss::SS_readdat","code":""},{"path":"/reference/calc_comp_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate uncertainty and biases in historic composition data — calc_comp_var","title":"Calculate uncertainty and biases in historic composition data — calc_comp_var","text":"Calculate uncertainty biases historic composition data","code":""},{"path":"/reference/calc_comp_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate uncertainty and biases in historic composition data — calc_comp_var","text":"","code":"calc_comp_var(   data_obs,   data_exp,   bins,   fleets = NULL,   years = NULL,   seasons = NULL,   merge_genders = TRUE,   genders = NULL,   merge_seasons = TRUE,   merge_fleets = FALSE )"},{"path":"/reference/calc_comp_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate uncertainty and biases in historic composition data — calc_comp_var","text":"data_obs data frame observed composition data extracted SS .dat file data_exp data frame expected composition data estimated SS assessment model bins vector object including composition bins fleets vector fleet numbers analyze composition uncertainty (Default fleets NULL) years vector years include calculating composition uncertainty (Default years NULL) seasons vector seasons include calculating composition uncertainty (Default years NULL) merge_genders TRUE/FALSE genders merged calculate variance biases (Defaults TRUE) genders vector genders analyze composition uncertainty (Default genders NULL) merge_seasons TRUE/FALSE seasons merged calculate variance biases (Defaults TRUE) merge_fleets TRUE/FALSE fleets merged calculate variance biases (Defaults FALSE)","code":""},{"path":"/reference/calc_comp_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate uncertainty and biases in historic composition data — calc_comp_var","text":"list object uncertainty bias characteristics inform data simulation.","code":""},{"path":"/reference/calc_comp_var.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate uncertainty and biases in historic composition data — calc_comp_var","text":"Nathan R. Vaughan","code":""},{"path":"/reference/calc_par_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the parameter trend — calc_par_trend","title":"Calculate the parameter trend — calc_par_trend","text":"Calculate parameter trend","code":""},{"path":"/reference/calc_par_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the parameter trend — calc_par_trend","text":"","code":"calc_par_trend(   val_info,   val_line = c(\"mean\", \"sd\", \"cv\", \"ar_1_phi\"),   ref_parm_value,   vals_df,   parname,   parlist,   ctl,   par_section,   dat )"},{"path":"/reference/calc_par_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the parameter trend — calc_par_trend","text":"val_info line input df containing info parameter. val_line line val info use. ref_parm_value historic parameter end trend value. Can NA line val_info given parameter vals_df dataframe parameter values year. Use get start val last year parname Name parameter devs SS model. reference, using relative method. parlist parameter file read r4ss::SS_readpar_3.30 ctl control file read r4ss::SS_readctl. par_section parameter section variabile ? dat data file read r4ss::SS_readdat.","code":""},{"path":"/reference/calc_par_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the parameter trend — calc_par_trend","text":"vector values length ncol(vals_df), number future years.","code":""},{"path":"/reference/calc_par_trend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the parameter trend — calc_par_trend","text":"Kathryn Doering","code":""},{"path":"/reference/change_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Change dataset from OM into format for EM — change_dat","title":"Change dataset from OM into format for EM — change_dat","text":"Change dataset OM format EM","code":""},{"path":"/reference/change_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change dataset from OM into format for EM — change_dat","text":"","code":"change_dat(OM_datfile, EM_datfile, EM_dir, do_checks = TRUE, verbose = FALSE)"},{"path":"/reference/change_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change dataset from OM into format for EM — change_dat","text":"OM_datfile Filename datfile produced OM within EM_dir. EM_datfile Filename datfile original EM within EM_dir. EM_dir Absolute relative path Estimation model directory. do_checks checks data performed? Defaults TRUE. verbose Want verbose output? Defaults FALSE.","code":""},{"path":"/reference/change_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change dataset from OM into format for EM — change_dat","text":"new EM data file. Side effect saving OM_dat file EM_dir.","code":""},{"path":"/reference/change_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change dataset from OM into format for EM — change_dat","text":"Kathryn Doering","code":""},{"path":"/reference/change_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change dataset from OM into format for EM — change_dat","text":"","code":"if (FALSE) { # TODO: Add example }"},{"path":"/reference/change_yrs_fcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the years in the forecast file — change_yrs_fcast","title":"Change the years in the forecast file — change_yrs_fcast","text":"increment years forward /change absolute years relative years.","code":""},{"path":"/reference/change_yrs_fcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the years in the forecast file — change_yrs_fcast","text":"","code":"change_yrs_fcast(   fore,   make_yrs_rel = TRUE,   nyrs_increment = NULL,   nyrs_fore = NULL,   mod_styr,   mod_endyr )"},{"path":"/reference/change_yrs_fcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the years in the forecast file — change_yrs_fcast","text":"fore forecasting file read R using r4ss::SS_readforecast() make_yrs_rel absolute years forecast file changed relative years? Defaults TRUE. nyrs_increment number years increment forecasting period years. NULL (default value), incremented. nyrs_fore number years forecasting . NULL, change number forecasting years already specified fore mod_styr first year model mod_endyr last year model fore assumes read . Note assumed model year different output nyrs_increment NULL.","code":""},{"path":"/reference/change_yrs_fcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the years in the forecast file — change_yrs_fcast","text":"forecasting file R list object","code":""},{"path":"/reference/change_yrs_fcast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change the years in the forecast file — change_yrs_fcast","text":"Kathryn Doering","code":""},{"path":"/reference/check_EM_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Check structure of forecast is suitable to use in the EM — check_EM_forecast","title":"Check structure of forecast is suitable to use in the EM — check_EM_forecast","text":"Check structure forecast suitable use EM","code":""},{"path":"/reference/check_EM_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check structure of forecast is suitable to use in the EM — check_EM_forecast","text":"","code":"check_EM_forecast(fore, n_flts_catch = NULL)"},{"path":"/reference/check_EM_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check structure of forecast is suitable to use in the EM — check_EM_forecast","text":"fore forecast list read using r4ss::SS_readforecast n_flts_catch number fleets catch. NULL, function skip check requiring input.","code":""},{"path":"/reference/check_EM_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check structure of forecast is suitable to use in the EM — check_EM_forecast","text":"Function mainly used side effects, returns TRUE invisibly errors created.","code":""},{"path":"/reference/check_EM_forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check structure of forecast is suitable to use in the EM — check_EM_forecast","text":"Kathryn Doering","code":""},{"path":"/reference/check_OM_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"check that an OM data set has at least the same data as an estimation model — check_OM_dat","title":"check that an OM data set has at least the same data as an estimation model — check_OM_dat","text":"check OM data set least data estimation model","code":""},{"path":"/reference/check_OM_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check that an OM data set has at least the same data as an estimation model — check_OM_dat","text":"","code":"check_OM_dat(OM_dat, EM_dat)"},{"path":"/reference/check_OM_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check that an OM data set has at least the same data as an estimation model — check_OM_dat","text":"OM_dat data set read using r4ss::SS_readdat operating model. Note span years EM_dat. EM_dat data set read using r4ss::SS_readdata estimation model. Note span years EM_dat","code":""},{"path":"/reference/check_OM_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"check that an OM data set has at least the same data as an estimation model — check_OM_dat","text":"Kathryn Doering","code":""},{"path":"/reference/check_avail_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"check all index years/fleets in EM available in OM. (but not vice versa)\na general function that can be used — check_avail_dat","title":"check all index years/fleets in EM available in OM. (but not vice versa)\na general function that can be used — check_avail_dat","text":"check index years/fleets EM available OM. (vice versa) general function can used","code":""},{"path":"/reference/check_avail_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check all index years/fleets in EM available in OM. (but not vice versa)\na general function that can be used — check_avail_dat","text":"","code":"check_avail_dat(   EM_dat,   OM_dat,   list_item = \"CPUE\",   colnames = c(\"year\", \"seas\", \"index\") )"},{"path":"/reference/check_avail_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check all index years/fleets in EM available in OM. (but not vice versa)\na general function that can be used — check_avail_dat","text":"EM_dat SS data file read using r4ss EM OM_dat SS data file read using r4ss OM list_item component EM_dat OM_dat check values . single string value. colnames column names data append together.","code":""},{"path":"/reference/check_avail_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"check all index years/fleets in EM available in OM. (but not vice versa)\na general function that can be used — check_avail_dat","text":"Kathryn Doering","code":""},{"path":"/reference/check_catch_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the catch dataframe — check_catch_df","title":"Check the catch dataframe — check_catch_df","text":"Ensure catch data frame correct column names correct order correct number column names.","code":""},{"path":"/reference/check_catch_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the catch dataframe — check_catch_df","text":"","code":"check_catch_df(df)"},{"path":"/reference/check_catch_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the catch dataframe — check_catch_df","text":"df catch dataframe test","code":""},{"path":"/reference/check_catch_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the catch dataframe — check_catch_df","text":"Kathryn Doering","code":""},{"path":"/reference/check_convergence.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag potential convergence issues in SS3 model runs — check_convergence","title":"Flag potential convergence issues in SS3 model runs — check_convergence","text":"basic checks convergance estimation model runs run_SSMSE() simulations. function 1) warns parameters bounds; 2) warns SSB EM 2x large half small OM. Note warnings may mean models converged, can flag potential issues can investigated ","code":""},{"path":"/reference/check_convergence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag potential convergence issues in SS3 model runs — check_convergence","text":"","code":"check_convergence(summary, min_yr, max_yr)"},{"path":"/reference/check_convergence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag potential convergence issues in SS3 model runs — check_convergence","text":"summary Summary returned running SSMSE_summary_all() min_yr first year SSB checked max_yr last year SSB checked","code":""},{"path":"/reference/check_convergence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag potential convergence issues in SS3 model runs — check_convergence","text":"tibble containing SSB values EM relative OM model run iteration scenario.","code":""},{"path":"/reference/check_convergence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag potential convergence issues in SS3 model runs — check_convergence","text":"","code":"if (FALSE) { check_convergance(SSMSE_summary, min_yr = 101, max_yr = 120) }"},{"path":"/reference/check_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the directory for an OM is valid — check_dir","title":"Check that the directory for an OM is valid — check_dir","text":"Check directory contains starter forecast SS files.","code":""},{"path":"/reference/check_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the directory for an OM is valid — check_dir","text":"","code":"check_dir(dir)"},{"path":"/reference/check_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the directory for an OM is valid — check_dir","text":"dir Input check. directory name contain SS model can used OM. @author Kathryn Doering","code":""},{"path":"/reference/check_future_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Check future catch smaller than the last year's population size. — check_future_catch","title":"Check future catch smaller than the last year's population size. — check_future_catch","text":"Note still possible take much catch population, may catch instances much catch","code":""},{"path":"/reference/check_future_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check future catch smaller than the last year's population size. — check_future_catch","text":"","code":"check_future_catch(catch, OM_dir, catch_units = \"bio\", datfile = NULL)"},{"path":"/reference/check_future_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check future catch smaller than the last year's population size. — check_future_catch","text":"catch dataframe catch values associated information add OM. column names SS data file (e.g., year,    season, fleet,    catch,    catch_se). length number years (works catch 1 fleet) OM_dir full path OM directory. catch_units units catch ? \"bio\" biomass \"num\" numbers? Defaults \"bio\". datfile optional name (character string) datafile, presumed exist OM_dir. Defaults NULL, NULL, function get datfile name starter.ss file OM_dir.","code":""},{"path":"/reference/check_future_catch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check future catch smaller than the last year's population size. — check_future_catch","text":"Kathryn Doering","code":""},{"path":"/reference/check_future_om_list_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the general structure of a future OM list and standardize values — check_future_om_list_str","title":"Check the general structure of a future OM list and standardize values — check_future_om_list_str","text":"Checks future OM list valid. values implicit, add values. check arguments scenario, just generic structure","code":""},{"path":"/reference/check_future_om_list_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the general structure of a future OM list and standardize values — check_future_om_list_str","text":"","code":"check_future_om_list_str(future_om_list)"},{"path":"/reference/check_future_om_list_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the general structure of a future OM list and standardize values — check_future_om_list_str","text":"future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure.","code":""},{"path":"/reference/check_future_om_list_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the general structure of a future OM list and standardize values — check_future_om_list_str","text":"future_om_list implicit arguments made explicit","code":""},{"path":"/reference/check_future_om_list_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Check structure of a future OM list against the scen_list and standardize\noutput — check_future_om_list_vals","title":"Check structure of a future OM list against the scen_list and standardize\noutput — check_future_om_list_vals","text":"Checks future OM list valid compared scen_list inputs","code":""},{"path":"/reference/check_future_om_list_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check structure of a future OM list against the scen_list and standardize\noutput — check_future_om_list_vals","text":"","code":"check_future_om_list_vals(future_om_list, scen_list)"},{"path":"/reference/check_future_om_list_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check structure of a future OM list against the scen_list and standardize\noutput — check_future_om_list_vals","text":"future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. scen_list list object scenarios specifying inputs created SSMSE::create_scen_list.","code":""},{"path":"/reference/check_future_om_list_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check structure of a future OM list against the scen_list and standardize\noutput — check_future_om_list_vals","text":"future_om_list implicit arguments made explicit","code":""},{"path":"/reference/check_sample_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sample_struct_list — check_sample_struct","title":"Check sample_struct_list — check_sample_struct","text":"Check list object sample_struct_list expected form, including correct names, correct column names (r4ss), values dataframes integer numeric. check numeric interger values make sense given model used.","code":""},{"path":"/reference/check_sample_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sample_struct_list — check_sample_struct","text":"","code":"check_sample_struct(   sample_struct,   valid_names = list(catch = c(\"Yr\", \"Seas\", \"FltSvy\", \"SE\"), CPUE = c(\"Yr\", \"Seas\",     \"FltSvy\", \"SE\"), lencomp = c(\"Yr\", \"Seas\", \"FltSvy\", \"Sex\", \"Part\", \"Nsamp\"), agecomp     = c(\"Yr\", \"Seas\", \"FltSvy\", \"Sex\", \"Part\", \"Ageerr\", \"Lbin_lo\", \"Lbin_hi\", \"Nsamp\"),     meanbodywt = c(\"Yr\", \"Seas\", \"FltSvy\", \"Part\", \"Type\", \"Std_in\"), MeanSize_at_Age_obs     = c(\"Yr\", \"Seas\", \"FltSvy\", \"Sex\", \"Part\", \"Ageerr\", \"N_\")) )"},{"path":"/reference/check_sample_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sample_struct_list — check_sample_struct","text":"sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. valid_names list compare sample_struct .","code":""},{"path":"/reference/check_sample_struct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check sample_struct_list — check_sample_struct","text":"Kathryn Doering","code":""},{"path":"/reference/check_scen_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Check structure of the object scen_list — check_scen_list","title":"Check structure of the object scen_list — check_scen_list","text":"Check structure input run_SSMSE.","code":""},{"path":"/reference/check_scen_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check structure of the object scen_list — check_scen_list","text":"","code":"check_scen_list(list, verbose = FALSE)"},{"path":"/reference/check_scen_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check structure of the object scen_list — check_scen_list","text":"list list check verbose Want verbose output? Defaults FALSE.","code":""},{"path":"/reference/check_scen_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check structure of the object scen_list — check_scen_list","text":"Kathryn Doering","code":""},{"path":"/reference/clean_init_mod_files.html","id":null,"dir":"Reference","previous_headings":"","what":"clean the initial model files — clean_init_mod_files","title":"clean the initial model files — clean_init_mod_files","text":"clean initial model files","code":""},{"path":"/reference/clean_init_mod_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean the initial model files — clean_init_mod_files","text":"","code":"clean_init_mod_files(   OM_out_dir,   EM_out_dir = NULL,   MS = \"EM\",   overwrite = FALSE )"},{"path":"/reference/clean_init_mod_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clean the initial model files — clean_init_mod_files","text":"OM_out_dir full path directory OM run. EM_out_dir Relative absolute path estimation model, using model outside SSMSE package. MS management strategy use. Current options :  \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify management strategies function. example, function called \"my_ms\" user specify MS = \"my_ms\" specify path file containing function custom_MS_source. overwrite Allow existing files overwritten?","code":""},{"path":"/reference/combine_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"function that creates a combined column to the list_item of interest — combine_cols","title":"function that creates a combined column to the list_item of interest — combine_cols","text":"function creates combined column list_item interest","code":""},{"path":"/reference/combine_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function that creates a combined column to the list_item of interest — combine_cols","text":"","code":"combine_cols(dat_list, list_item, colnames)"},{"path":"/reference/combine_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function that creates a combined column to the list_item of interest — combine_cols","text":"dat_list SS data file list read using r4ss list_item List item dat_list extract return modified version value colnames Column names list_item","code":""},{"path":"/reference/convert_future_om_list_to_devs_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the devs dataframe for a scenario and iteration from user input — convert_future_om_list_to_devs_df","title":"Create the devs dataframe for a scenario and iteration from user input — convert_future_om_list_to_devs_df","text":"function parses user inputs convert dataframe deviations.","code":""},{"path":"/reference/convert_future_om_list_to_devs_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the devs dataframe for a scenario and iteration from user input — convert_future_om_list_to_devs_df","text":"","code":"convert_future_om_list_to_devs_df(   future_om_list,   scen_name,   niter,   om_mod_path,   nyrs,   global_seed = 123 )"},{"path":"/reference/convert_future_om_list_to_devs_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the devs dataframe for a scenario and iteration from user input — convert_future_om_list_to_devs_df","text":"future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. scen_name scenario name niter iteration number om_mod_path Path OM files. Used reference parameter names. nyrs total number years model extended forward. global_seed global seed set, pull new seeds . Defaults 123.","code":""},{"path":"/reference/convert_future_om_list_to_devs_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the devs dataframe for a scenario and iteration from user input — convert_future_om_list_to_devs_df","text":"list including 3 dataframes one list: devs_df, additive deviations relative base values; base_df, base values parameter deviations; abs_df, absolute future values year (first col) parameter (parameterss different cols). Also includes modified version future_om_list includes seed applied list component (note ultimate seed used sampling, addiitonal) seeds generated seed based scenario, iteration, option randomness (replicate across scenarios randomize across scenarios). Note OM files modified created part function (.e., side effects).","code":""},{"path":"/reference/convert_future_om_list_to_devs_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the devs dataframe for a scenario and iteration from user input — convert_future_om_list_to_devs_df","text":"Kathryn Doering","code":""},{"path":"/reference/convert_to_r4ss_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert user input to r4ss data names — convert_to_r4ss_names","title":"Convert user input to r4ss data names — convert_to_r4ss_names","text":"Convert user input r4ss data names","code":""},{"path":"/reference/convert_to_r4ss_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert user input to r4ss data names — convert_to_r4ss_names","text":"","code":"convert_to_r4ss_names(   sample_struct,   convert_key = data.frame(df_name = c(rep(\"catch\", 4), rep(\"CPUE\", 4), rep(\"lencomp\",     6), rep(\"agecomp\", 9), rep(\"meanbodywt\", 6), rep(\"MeanSize_at_Age_obs\", 7)),     r4ss_name = c(\"year\", \"seas\", \"fleet\", \"catch_se\", \"year\", \"seas\", \"index\", \"se_log\",     \"Yr\", \"Seas\", \"FltSvy\", \"Gender\", \"Part\", \"Nsamp\", \"Yr\", \"Seas\", \"FltSvy\", \"Gender\",     \"Part\", \"Ageerr\", \"Lbin_lo\", \"Lbin_hi\", \"Nsamp\", \"Year\", \"Seas\", \"Fleet\",     \"Partition\", \"Type\", \"Std_in\", \"Yr\", \"Seas\", \"FltSvy\", \"Gender\", \"Part\", \"AgeErr\",     \"N_\"), sample_struct_name = c(\"Yr\",       \"Seas\", \"FltSvy\", \"SE\", \"Yr\", \"Seas\",     \"FltSvy\", \"SE\", \"Yr\", \"Seas\", \"FltSvy\", \"Sex\", \"Part\", \"Nsamp\", \"Yr\", \"Seas\",     \"FltSvy\", \"Sex\", \"Part\", \"Ageerr\", \"Lbin_lo\", \"Lbin_hi\", \"Nsamp\", \"Yr\", \"Seas\",     \"FltSvy\", \"Part\", \"Type\", \"Std_in\", \"Yr\", \"Seas\", \"FltSvy\", \"Sex\", \"Part\", \"Ageerr\",     \"N_\"), stringsAsFactors = FALSE) )"},{"path":"/reference/convert_to_r4ss_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert user input to r4ss data names — convert_to_r4ss_names","text":"sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. convert_key Data frame defining r4ss names relate sample_struct names. now, 1:1 relationship assumed.","code":""},{"path":"/reference/copy_model_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy OM and EM model files — copy_model_files","title":"Copy OM and EM model files — copy_model_files","text":"Copy OM EM model files input output location.","code":""},{"path":"/reference/copy_model_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy OM and EM model files — copy_model_files","text":"","code":"copy_model_files(   OM_in_dir = NULL,   OM_out_dir = NULL,   EM_in_dir = NULL,   EM_out_dir = NULL,   verbose = FALSE )"},{"path":"/reference/copy_model_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy OM and EM model files — copy_model_files","text":"OM_in_dir Relative absolute path operating model, using model outside SSMSE package. string. OM_out_dir full path directory OM run. EM_in_dir Relative absolute path estimation model, EM_out_dir Relative absolute path estimation model, using model outside SSMSE package. verbose Want verbose output? Defaults FALSE.","code":""},{"path":"/reference/copy_model_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy OM and EM model files — copy_model_files","text":"TRUE, copying successful","code":""},{"path":"/reference/create_OM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the OM — create_OM","title":"Create the OM — create_OM","text":"function manipulates OM needed can used operating model.","code":""},{"path":"/reference/create_OM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the OM — create_OM","text":"","code":"create_OM(   OM_out_dir,   overwrite = TRUE,   writedat = TRUE,   verbose = FALSE,   nyrs = NULL,   nyrs_assess = NULL,   nscen = 1,   scen_name = NULL,   niter = 1,   future_om_dat = NULL,   verify_OM = TRUE,   sample_struct_hist = NULL,   sample_struct = NULL,   seed = NULL )"},{"path":"/reference/create_OM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the OM — create_OM","text":"OM_out_dir full path directory OM run. overwrite Allow existing files overwritten? writedat new datafile written? verbose Want verbose output? Defaults FALSE. nyrs Number years beyond years included OM run MSE. single integer value. nyrs_assess number years assessments. used structure forecast file use OM. nscen scenario number scen_name scenario name niter iteration number future_om_dat optional data_frame including changes made end year input model. Including parameter variations, recruitment deviations, implementation errors. verify_OM model run without estimation basic checks done verify OM can run? Defaults TRUE. sample_struct_hist optional list including years sampled historical period data generated OM. left NULL, sampling scheme used OM's data file. NULL, year. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. seed random seed reproducible results possible.","code":""},{"path":"/reference/create_OM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the OM — create_OM","text":"modified datafile","code":""},{"path":"/reference/create_OM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the OM — create_OM","text":"Kathryn Doering & Nathan Vaughan","code":""},{"path":"/reference/create_future_om_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create future om list objects — create_future_om_list","title":"Helper function to create future om list objects — create_future_om_list","text":"future_om_list objects specify changes make future OM OM extended forward time. particular, function helps users create objects. now, just returns examples based cod model comes SSMSE. learn options available future_om_list object, see structure future_om_list section SSMSE user manual.","code":""},{"path":"/reference/create_future_om_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create future om list objects — create_future_om_list","text":"","code":"create_future_om_list(   example_type = c(\"model_change\", \"custom\"),   list_length = 1 )"},{"path":"/reference/create_future_om_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create future om list objects — create_future_om_list","text":"example_type Type example future_om_list object create. Options \"model_change\" \"custom\". Defaults \"model_change\". list_length length example list create. Defaults 1. now, just replicates list.","code":""},{"path":"/reference/create_future_om_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to create future om list objects — create_future_om_list","text":"","code":"example_future_om_list <-   create_future_om_list(example_type = \"custom\", list_length = 2)"},{"path":"/reference/create_out_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"create the OM directory — create_out_dirs","title":"create the OM directory — create_out_dirs","text":"Create OM directory within out_dir specified (named value niter)","code":""},{"path":"/reference/create_out_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create the OM directory — create_out_dirs","text":"","code":"create_out_dirs(   out_dir,   niter,   OM_name,   OM_in_dir,   EM_name = NULL,   EM_in_dir = NULL )"},{"path":"/reference/create_out_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create the OM directory — create_out_dirs","text":"out_dir directory write output. NULL, default working directory. niter number iteration OM_name Name operating model (OM). OM_in_dir Relative absolute path operating model, using model outside SSMSE package. string. EM_name Name EM model EM_in_dir Relative absolute path estimation model,","code":""},{"path":"/reference/create_out_dirs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create the OM directory — create_out_dirs","text":"list 2 named components length 1 characters. components : OM_dir, OM run, OM_in_dir, model files copied .","code":""},{"path":"/reference/create_sample_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the sample_struct list — create_sample_struct","title":"Create the sample_struct list — create_sample_struct","text":"Create sampling structure list using pattern data file year range. NAs added pattern found (rm_NAs = FALSE). types structure added list (given presence dat file) names called list object parentheses : catch (catch), relative indices (CPUE), length composition (lencomp), age composition (agecomp), mean body weight (meanbodywt), mean size age (MeanSize_at_Age_obs). Details creating sample structure list available sampling options section SSMSE user manual.","code":""},{"path":"/reference/create_sample_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the sample_struct list — create_sample_struct","text":"","code":"create_sample_struct(dat, nyrs, rm_NAs = FALSE)"},{"path":"/reference/create_sample_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the sample_struct list — create_sample_struct","text":"dat r4ss list object read using r4ss::SS_readdat() path (relative absolute) SS data file read . nyrs Number years beyond years included dat file run MSE. single integer value. rm_NAs NAs removed dataframes? Defaults FALSE.","code":""},{"path":"/reference/create_sample_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the sample_struct list — create_sample_struct","text":"sample_struct list object, list element dataframe containing sampling values. data type, NA returned element.","code":""},{"path":"/reference/create_sample_struct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the sample_struct list — create_sample_struct","text":"Kathryn Doering","code":""},{"path":"/reference/create_sample_struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the sample_struct list — create_sample_struct","text":"","code":"OM_path <- system.file(\"extdata\", \"models\", \"cod\", \"ss3.dat\", package = \"SSMSE\") # note there is a warning for lencomp because it does not have a consistent pattern sample_struct <- create_sample_struct(OM_path, nyrs = 20) #> Warning: Pattern not found for lencomp: FltSvy 1, Seas 1. Returning NA for Yr in this dataframe. print(sample_struct) #> $catch #>     Yr Seas FltSvy    SE #> 1  101    1      1 0.005 #> 2  102    1      1 0.005 #> 3  103    1      1 0.005 #> 4  104    1      1 0.005 #> 5  105    1      1 0.005 #> 6  106    1      1 0.005 #> 7  107    1      1 0.005 #> 8  108    1      1 0.005 #> 9  109    1      1 0.005 #> 10 110    1      1 0.005 #> 11 111    1      1 0.005 #> 12 112    1      1 0.005 #> 13 113    1      1 0.005 #> 14 114    1      1 0.005 #> 15 115    1      1 0.005 #> 16 116    1      1 0.005 #> 17 117    1      1 0.005 #> 18 118    1      1 0.005 #> 19 119    1      1 0.005 #> 20 120    1      1 0.005 #>  #> $CPUE #>    Yr Seas FltSvy  SE #> 1 105    7      2 0.2 #> 2 110    7      2 0.2 #> 3 115    7      2 0.2 #> 4 120    7      2 0.2 #>  #> $lencomp #>   Yr Seas FltSvy Sex Part Nsamp #> 1 NA    1      1   0    0   125 #>  #> $agecomp #>    Yr Seas FltSvy Sex Part Ageerr Lbin_lo Lbin_hi Nsamp #> 1 105    1      2   0    0      1      -1      -1   500 #> 2 110    1      2   0    0      1      -1      -1   500 #> 3 115    1      2   0    0      1      -1      -1   500 #> 4 120    1      2   0    0      1      -1      -1   500 #>  #> $meanbodywt #> [1] NA #>  #> $MeanSize_at_Age_obs #> [1] NA #>"},{"path":"/reference/create_scen_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create scen_list object to use in run_SSMSE function. — create_scen_list","title":"Create scen_list object to use in run_SSMSE function. — create_scen_list","text":"Function create parameter scen_list run_SSMSE, also used users construct list prior using run_SSMSE. Note error checking function, getting output insure output can used input run_SSMSE.","code":""},{"path":"/reference/create_scen_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create scen_list object to use in run_SSMSE function. — create_scen_list","text":"","code":"create_scen_list(   scen_name_vec,   out_dir_scen_vec = NULL,   iter_vec = NULL,   OM_name_vec = NULL,   OM_in_dir_vec = NULL,   EM_name_vec = NULL,   EM_in_dir_vec = NULL,   MS_vec = NULL,   use_SS_boot_vec = NULL,   nyrs_vec = NULL,   nyrs_assess_vec = NULL,   sample_struct_list = NULL,   sample_struct_hist_list = NULL,   sample_catch_vec = NULL,   interim_struct_list = NULL )"},{"path":"/reference/create_scen_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create scen_list object to use in run_SSMSE function. — create_scen_list","text":"scen_name_vec vector containing names scenarios. string directory containing model runs scenario.s out_dir_scen_vec directory write output. NULL, default working directory. iter_vec number iterations per scenario. vector integers order scen_name_vec. OM_name_vec Names valid Stock Synthesis stock assessment model. see names built-models, type list.dirs(system.file(\"extdata\", \"models\", package = \"SSMSE\"),full.names = FALSE, recursive = FALSE) R console. OM_in_dir_vec Vector relative absolute paths operating model, using model outside SSMSE package. EM_name_vec NULL unless MS = \"EM\". Name valid Stock Synthesis stock assessment model use EM. value EM_name NULL  MS = \"EM\", SSMSE look estimation model path specified EM_in_dir. valid inputs EM_name : \"cod\" NULL. EM_in_dir_vec Relative absolute path estimation model, using model outside SSMSE package. Note value NULL MS value \"EM\". MS_vec Vector management strategies. Current options : \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify managment strategies function. use function, must available global enviroment specified name MS. example, function called \"my_ms\" user make available global environment specify \"my_ms\" component MS_vec. use_SS_boot_vec bootstrapped data set generated SS used? Defaults TRUE. nyrs_vec Number years beyond years included OM run MSE. single integer value. nyrs_assess_vec number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. (NOTE: made flexible instead reading vector assessment years, users specify irregular numbers yrs assessments.) sample_struct_list optional list lists including years, seasons, fleets  added OM EM different types data. NULL, data structure try infered pattern found datatypes within EM datafiles. Include strucutre number years extend model . sample_struct_hist_list optional list lists including years sampled historical period data generated OM. left NULL, sampling scheme used OM's data file. NULL, year sample_catch_vec catch sampled fixed OM values? can single Boolean (TRUE FALSE) apply scenarios vector length number scenarios. Defaults FALSE. interim_struct_list optional list parameters control interim assessment example structure , Beta=positive value inversely proportional risk, MA_years= number years average index observations calculating deviations, assess_freq=number years full assessments interim assessment happen every year, Index_weights vector length n indexes weights indexes multi index inference. interim_struct_list<-list(Beta=1,MA_years=3,assess_freq=5,Index_weights=rep(1,max(ref_index[,3])))","code":""},{"path":"/reference/create_scen_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create scen_list object to use in run_SSMSE function. — create_scen_list","text":"Kathryn Doering","code":""},{"path":"/reference/create_scen_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create scen_list object to use in run_SSMSE function. — create_scen_list","text":"","code":"scen_list <- create_scen_list(   scen_name_vec = c(\"scen 1\", \"scen_2\"),   out_dir_scen_vec = file.path(\"path\", \"to\", \"dir\"),   iter_vec = list(1:2, 5:7),   OM_name_vec = \"cod\",   OM_in_dir_vec = NULL,   EM_name_vec = \"cod\",   EM_in_dir_vec = NULL,   MS_vec = \"EM\",   use_SS_boot_vec = TRUE,   nyrs_vec = 6,   nyrs_assess_vec = 3,   sample_struct_list = NULL )"},{"path":"/reference/develop_OMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Develop different operating models — develop_OMs","title":"Develop different operating models — develop_OMs","text":"utility help user create new operating models starting model. now, possible adjust 1 parameter value","code":""},{"path":"/reference/develop_OMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Develop different operating models — develop_OMs","text":"","code":"develop_OMs(   OM_name = NULL,   OM_in_dir = NULL,   out_dir = getwd(),   par_name,   par_vals,   refit_OMs = TRUE,   hess = FALSE )"},{"path":"/reference/develop_OMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Develop different operating models — develop_OMs","text":"OM_name Name operating model (OM). OM_in_dir Relative absolute path operating model, using model outside SSMSE package. string. out_dir Path new models written. Defaults current working directory. par_name Name parameter modify par_vals Vector parameter values modify OM. Assume fixed phase set negative. refit_OMs models refit data? Defaults TRUE hess hessian estimated reffiting OMs? defaults FALSE","code":""},{"path":"/reference/get_EM_catch_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the EM catch data frame — get_EM_catch_df","title":"Get the EM catch data frame — get_EM_catch_df","text":"Get data frame catch next iterations using Stock Synthesis Estimation model Report.sso file.","code":""},{"path":"/reference/get_EM_catch_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the EM catch data frame — get_EM_catch_df","text":"","code":"get_EM_catch_df(EM_dir, dat)"},{"path":"/reference/get_EM_catch_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the EM catch data frame — get_EM_catch_df","text":"EM_dir Path EM files dat SS datfile read R using r4ss::SS_readdat()","code":""},{"path":"/reference/get_EM_catch_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the EM catch data frame — get_EM_catch_df","text":"data frame future catch","code":""},{"path":"/reference/get_EM_catch_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the EM catch data frame — get_EM_catch_df","text":"Kathryn Doering","code":""},{"path":"/reference/get_EM_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the OM data to match the format of the original EM data — get_EM_dat","title":"Change the OM data to match the format of the original EM data — get_EM_dat","text":"technical part changing EM data. Note may unnecessary","code":""},{"path":"/reference/get_EM_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the OM data to match the format of the original EM data — get_EM_dat","text":"","code":"get_EM_dat(OM_dat, EM_dat, do_checks = TRUE)"},{"path":"/reference/get_EM_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the OM data to match the format of the original EM data — get_EM_dat","text":"OM_dat SS data file read list read using r4ss operating model EM_dat SS data file read list read using r4ss estimation model do_checks checks data performed? Defaults TRUE.","code":""},{"path":"/reference/get_EM_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the OM data to match the format of the original EM data — get_EM_dat","text":"data list format can read/written r4ss index. lcomps, age comps OM_dat, structure EM_dat.","code":""},{"path":"/reference/get_EM_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change the OM data to match the format of the original EM data — get_EM_dat","text":"Kathryn Doering","code":""},{"path":"/reference/get_F.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Fishing mortality from the timeseries Report.sso table — get_F","title":"Get the Fishing mortality from the timeseries Report.sso table — get_F","text":"Get Fishing mortality timeseries Report.sso table","code":""},{"path":"/reference/get_F.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Fishing mortality from the timeseries Report.sso table — get_F","text":"","code":"get_F(timeseries, fleetnames, fleetnames_all)"},{"path":"/reference/get_F.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Fishing mortality from the timeseries Report.sso table — get_F","text":"timeseries timeseries table r4ss::SS_output(). fleetnames vector fleet names, order appear ss model. fleetnames_all vector fleet names model order specified model. vector helps function know order fleets appear model.","code":""},{"path":"/reference/get_F.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Fishing mortality from the timeseries Report.sso table — get_F","text":"list containing: F_df, long dataframe F Yr, Era, Seas, fleet; F_rate, data frame F time frame model Yr, Seas, Fleet, ordered ss.par file expects; init_F, named vector initial F values Season Fleet, ordered (named) SS expects; F_rate_fcast, dataframe forecasted F Yr, Seas, fleet, ordered SS expect F_rate.","code":""},{"path":"/reference/get_SSB_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Metric: calculate the average SSB over a range of years\nfor each iteration — get_SSB_avg","title":"Example Performance Metric: calculate the average SSB over a range of years\nfor each iteration — get_SSB_avg","text":"Example performance metric calculates average Spawning Stock Biomass SSB (units simulations) range years iteration scenario SSMSE simulation run.","code":""},{"path":"/reference/get_SSB_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Metric: calculate the average SSB over a range of years\nfor each iteration — get_SSB_avg","text":"","code":"get_SSB_avg(summary, min_yr, max_yr)"},{"path":"/reference/get_SSB_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Performance Metric: calculate the average SSB over a range of years\nfor each iteration — get_SSB_avg","text":"summary Summary returned running SSMSE_summary_all() min_yr first year include average max_yr last year include average","code":""},{"path":"/reference/get_SSB_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Performance Metric: calculate the average SSB over a range of years\nfor each iteration — get_SSB_avg","text":"tibble containing average SSB iteration scenario.","code":""},{"path":"/reference/get_SSB_avg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Performance Metric: calculate the average SSB over a range of years\nfor each iteration — get_SSB_avg","text":"","code":"if (FALSE) { avg_ssb <- get_SSB_avg(run_SSMSE_summary, min_yr = 10, max_yr = 105) avg_ssb }"},{"path":"/reference/get_avg_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Metric: Calculate average catch over a range of years — get_avg_catch","title":"Example Performance Metric: Calculate average catch over a range of years — get_avg_catch","text":"Example performance metric calculates average catch range years Stock Synthesis data file. function aggregates across fleets, may appropriate models multiple fleets.","code":""},{"path":"/reference/get_avg_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Metric: Calculate average catch over a range of years — get_avg_catch","text":"","code":"get_avg_catch(datfile, yrs)"},{"path":"/reference/get_avg_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Performance Metric: Calculate average catch over a range of years — get_avg_catch","text":"datfile Path Stock Synthesis data file containing catch yrs vector containing range years. Years defined Stock Synthesis data file.","code":""},{"path":"/reference/get_avg_catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Performance Metric: Calculate average catch over a range of years — get_avg_catch","text":"average catch, number.","code":""},{"path":"/reference/get_avg_catch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Performance Metric: Calculate average catch over a range of years — get_avg_catch","text":"","code":"if (FALSE) { avg_catch <- function(datfile = \"ss3model/dat.ss\", yrs = 30:75) {   avg_catch } }"},{"path":"/reference/get_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SS3 binary/executable location in package — get_bin","title":"Get SS3 binary/executable location in package — get_bin","text":"Get binary/executable location package SSMSE. function ss3sim.","code":""},{"path":"/reference/get_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SS3 binary/executable location in package — get_bin","text":"","code":"get_bin(bin_name = \"ss\")"},{"path":"/reference/get_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SS3 binary/executable location in package — get_bin","text":"bin_name Name SS3 binary, defaults \"ss\"","code":""},{"path":"/reference/get_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SS3 binary/executable location in package — get_bin","text":"path SS binary. using GitHub version package, internal binary. Otherwise, function search version binary path. See ss3sim vignette.","code":""},{"path":"/reference/get_bin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get SS3 binary/executable location in package — get_bin","text":"","code":"if (FALSE) { get_bin() }"},{"path":"/reference/get_catch_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Metric: Calculate the coefficient of variation of catch — get_catch_cv","title":"Example Performance Metric: Calculate the coefficient of variation of catch — get_catch_cv","text":"Example performance metric calculates coefficient variation (CV) catch range years Stock Synthesis data file. function aggregates across fleets, may appropriate models multiple fleets.","code":""},{"path":"/reference/get_catch_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Metric: Calculate the coefficient of variation of catch — get_catch_cv","text":"","code":"get_catch_cv(datfile, yrs)"},{"path":"/reference/get_catch_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Performance Metric: Calculate the coefficient of variation of catch — get_catch_cv","text":"datfile Path Stock Synthesis data file containing catch yrs vector containing range years. Years defined Stock Synthesis data file.","code":""},{"path":"/reference/get_catch_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Performance Metric: Calculate the coefficient of variation of catch — get_catch_cv","text":"catch coefficient variation, number.","code":""},{"path":"/reference/get_catch_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Performance Metric: Calculate the coefficient of variation of catch — get_catch_cv","text":"","code":"if (FALSE) { catch_cv <- get_catch_cv(datfile = \"mod/dat.ss\", yrs = c(20:50, 75:100)) catch_cv }"},{"path":"/reference/get_catch_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Metric: Calculate Standard Deviation of Catch — get_catch_sd","title":"Example Performance Metric: Calculate Standard Deviation of Catch — get_catch_sd","text":"Example performance metric calculates standard deviation catch range years Stock Synthesis data file. function aggregates across fleets, may appropriate models multiple fleets.","code":""},{"path":"/reference/get_catch_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Metric: Calculate Standard Deviation of Catch — get_catch_sd","text":"","code":"get_catch_sd(datfile, yrs)"},{"path":"/reference/get_catch_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Performance Metric: Calculate Standard Deviation of Catch — get_catch_sd","text":"datfile Path Stock Synthesis data file containing catch yrs vector containing range years. Years defined Stock Synthesis data file.","code":""},{"path":"/reference/get_catch_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Performance Metric: Calculate Standard Deviation of Catch — get_catch_sd","text":"catch standard deviation, number.","code":""},{"path":"/reference/get_catch_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Performance Metric: Calculate Standard Deviation of Catch — get_catch_sd","text":"","code":"if (FALSE) { catch_sd <- get_catch_sd(datfile = \"mod/dat.ss\", yrs = c(20:50, 75:100)) catch_sd }"},{"path":"/reference/get_dead_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dead catch from the timeseries Report.sso table — get_dead_catch","title":"Get dead catch from the timeseries Report.sso table — get_dead_catch","text":"Get dead catch timeseries Report.sso table","code":""},{"path":"/reference/get_dead_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dead catch from the timeseries Report.sso table — get_dead_catch","text":"","code":"get_dead_catch(timeseries, units_of_catch)"},{"path":"/reference/get_dead_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dead catch from the timeseries Report.sso table — get_dead_catch","text":"timeseries timeseries table r4ss::SS_output(). units_of_catch datalist, catch units. named list names fleets (provide extra check)","code":""},{"path":"/reference/get_dead_catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dead catch from the timeseries Report.sso table — get_dead_catch","text":"data frame retained catch Yr, Era, Seas, Fleet, units (long format)","code":""},{"path":"/reference/get_full_sample_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the full sample structure from user input — get_full_sample_struct","title":"Get the full sample structure from user input — get_full_sample_struct","text":"Get full sample structure user input looking OM data. unambiguously determined, function return error describing additional user input required.","code":""},{"path":"/reference/get_full_sample_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the full sample structure from user input — get_full_sample_struct","text":"","code":"get_full_sample_struct(sample_struct, OM_out_dir)"},{"path":"/reference/get_full_sample_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the full sample structure from user input — get_full_sample_struct","text":"sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. OM_out_dir full path directory OM run.","code":""},{"path":"/reference/get_full_sample_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the full sample structure from user input — get_full_sample_struct","text":"list full sample structure, using names input user input user (r4ss names).","code":""},{"path":"/reference/get_impl_error_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Put implementation error of 0 into a matrix — get_impl_error_matrix","title":"Put implementation error of 0 into a matrix — get_impl_error_matrix","text":"Put implementation error 0 matrix","code":""},{"path":"/reference/get_impl_error_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put implementation error of 0 into a matrix — get_impl_error_matrix","text":"","code":"get_impl_error_matrix(yrs)"},{"path":"/reference/get_impl_error_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put implementation error of 0 into a matrix — get_impl_error_matrix","text":"yrs vector years","code":""},{"path":"/reference/get_impl_error_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put implementation error of 0 into a matrix — get_impl_error_matrix","text":"length(yrs) row, 2 column matrix containing years first column implementation error values second.","code":""},{"path":"/reference/get_init_samp_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the sampling scheme in a data file. — get_init_samp_scheme","title":"Get the sampling scheme in a data file. — get_init_samp_scheme","text":"Determine default sampling scheme given data file. Produces list object sampling scheme, can modified, desired.","code":""},{"path":"/reference/get_init_samp_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the sampling scheme in a data file. — get_init_samp_scheme","text":"","code":"get_init_samp_scheme(   dat,   dat_types = c(\"CPUE\", \"lencomp\", \"agecomp\", \"meanbodywt\", \"MeanSize_at_Age_obs\") )"},{"path":"/reference/get_init_samp_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the sampling scheme in a data file. — get_init_samp_scheme","text":"dat SS data file dat_types Types data include","code":""},{"path":"/reference/get_input_value.html","id":null,"dir":"Reference","previous_headings":"","what":"return a value from a data frame — get_input_value","title":"return a value from a data frame — get_input_value","text":"Return single value column dataframe using method specified","code":""},{"path":"/reference/get_input_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return a value from a data frame — get_input_value","text":"","code":"get_input_value(data, method = \"most_common_value\", colname, group = NULL)"},{"path":"/reference/get_input_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return a value from a data frame — get_input_value","text":"data dataframe column matches (least partially) colname method value returned selected? Current options include \"most_common_value\", common input uncertainty value returned \"only_value\" input values must data; , value returned. Otherwise, error generated. colname Column name string data. Note partial matching regular expressions can used. group Column name string data used group data calculating input value use. Defaults NULL.","code":""},{"path":"/reference/get_input_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return a value from a data frame — get_input_value","text":"value type data[, colname] group NULL, data.frame group specified.","code":""},{"path":"/reference/get_input_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"return a value from a data frame — get_input_value","text":"Note function created intially return value use input uncertainty, generalizable pulling value column data frame using method specified.","code":""},{"path":"/reference/get_input_value.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"return a value from a data frame — get_input_value","text":"Kathryn Doering","code":""},{"path":"/reference/get_input_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"return a value from a data frame — get_input_value","text":"","code":"dfr <- data.frame(   \"year\" = 1:5,   \"value\" = c(2, 2, 2, 3, 3),   \"se_log\" = 0.2 ) SSMSE:::get_input_value(   data = dfr, method = \"most_common_value\", colname = \"se_log\",   group = \"value\" ) #>   value se_log #> 1     2    0.2 #> 2     3    0.2 SSMSE:::get_input_value(data = dfr, method = \"most_common_value\", colname = \"value\") #> [1] 2 SSMSE:::get_input_value(data = dfr, method = \"only_value\", colname = \"se_log\") #> [1] 0.2 # generates an error: # SSMSE:::get_input_value(data = dfr, method = \"only_value\", colname = \"value\")"},{"path":"/reference/get_no_EM_catch_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the data frame of catch for the next iterations when not using an\nestimation model. — get_no_EM_catch_df","title":"Get the data frame of catch for the next iterations when not using an\nestimation model. — get_no_EM_catch_df","text":"Get data frame catch next iterations using estimation model.","code":""},{"path":"/reference/get_no_EM_catch_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the data frame of catch for the next iterations when not using an\nestimation model. — get_no_EM_catch_df","text":"","code":"get_no_EM_catch_df(OM_dir, yrs, MS = \"last_yr_catch\")"},{"path":"/reference/get_no_EM_catch_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the data frame of catch for the next iterations when not using an\nestimation model. — get_no_EM_catch_df","text":"OM_dir full path OM directory. yrs vector years MS management strategy use. Current options :  \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify management strategies function. example, function called \"my_ms\" user specify MS = \"my_ms\" specify path file containing function custom_MS_source.","code":""},{"path":"/reference/get_no_EM_catch_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the data frame of catch for the next iterations when not using an\nestimation model. — get_no_EM_catch_df","text":"dataframe future catch.","code":""},{"path":"/reference/get_no_EM_catch_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the data frame of catch for the next iterations when not using an\nestimation model. — get_no_EM_catch_df","text":"Kathryn Doering","code":""},{"path":"/reference/get_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"get basic data to calculate performance metrics — get_performance_metrics","title":"get basic data to calculate performance metrics — get_performance_metrics","text":"get basic data calculate performance metrics","code":""},{"path":"/reference/get_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get basic data to calculate performance metrics — get_performance_metrics","text":"","code":"get_performance_metrics(   dir = getwd(),   use_SSMSE_summary_all = TRUE,   quantities = c(\"catch\", \"SpawnBio\") )"},{"path":"/reference/get_performance_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get basic data to calculate performance metrics — get_performance_metrics","text":"dir Path directory containing scenarios, either relative absolute. Defaults working directory. use_SSMSE_summary_all exists, summmary files generated SSMSE_summary_all used? Defaults TRUE. quantities Quantites operating model add","code":""},{"path":"/reference/get_rel_SSB_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Metric: Calculate the avg relative SSB (SSB/SSB unfished)\nover a range of years for each iteration — get_rel_SSB_avg","title":"Example Performance Metric: Calculate the avg relative SSB (SSB/SSB unfished)\nover a range of years for each iteration — get_rel_SSB_avg","text":"Example performance metric calculates average Spawning Stock Biomass SSB (units simulations) relative  unfished SSB range years iteration scenario SSMSE simulation run.","code":""},{"path":"/reference/get_rel_SSB_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Metric: Calculate the avg relative SSB (SSB/SSB unfished)\nover a range of years for each iteration — get_rel_SSB_avg","text":"","code":"get_rel_SSB_avg(summary, min_yr, max_yr)"},{"path":"/reference/get_rel_SSB_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Performance Metric: Calculate the avg relative SSB (SSB/SSB unfished)\nover a range of years for each iteration — get_rel_SSB_avg","text":"summary Summary returned running SSMSE_summary_all() min_yr first year include average max_yr last year include average","code":""},{"path":"/reference/get_rel_SSB_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Performance Metric: Calculate the avg relative SSB (SSB/SSB unfished)\nover a range of years for each iteration — get_rel_SSB_avg","text":"tibble containing relative avg SSB per year iteration scenario.","code":""},{"path":"/reference/get_rel_SSB_avg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Performance Metric: Calculate the avg relative SSB (SSB/SSB unfished)\nover a range of years for each iteration — get_rel_SSB_avg","text":"","code":"if (FALSE) { rel_avg_ssb <- get_rel_SSB_avg(run_SSMSE_summary, min_yr = 10, max_yr = 105) rel_avg_ssb }"},{"path":"/reference/get_retained_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get retained catch from the timeseries Report.sso table — get_retained_catch","title":"Get retained catch from the timeseries Report.sso table — get_retained_catch","text":"Get retained catch timeseries Report.sso table","code":""},{"path":"/reference/get_retained_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get retained catch from the timeseries Report.sso table — get_retained_catch","text":"","code":"get_retained_catch(timeseries, units_of_catch)"},{"path":"/reference/get_retained_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get retained catch from the timeseries Report.sso table — get_retained_catch","text":"timeseries timeseries table r4ss::SS_output(). units_of_catch datalist, catch units. named list names fleets (provide extra check)","code":""},{"path":"/reference/get_retained_catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get retained catch from the timeseries Report.sso table — get_retained_catch","text":"data frame retained catch Yr, Era, Seas, Fleet, units (long format)","code":""},{"path":"/reference/get_total_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Metric: Calculate total catch over a range of years — get_total_catch","title":"Example Performance Metric: Calculate total catch over a range of years — get_total_catch","text":"Example performance metric calculates total catch range years Stock Synthesis data file. function aggregates catch across fleets, may appropriate models multiple fleets.","code":""},{"path":"/reference/get_total_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Metric: Calculate total catch over a range of years — get_total_catch","text":"","code":"get_total_catch(datfile, yrs)"},{"path":"/reference/get_total_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Performance Metric: Calculate total catch over a range of years — get_total_catch","text":"datfile Path Stock Synthesis data file containing catch yrs vector containing range years. Years defined Stock Synthesis data file.","code":""},{"path":"/reference/get_total_catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Performance Metric: Calculate total catch over a range of years — get_total_catch","text":"total catch, number.","code":""},{"path":"/reference/get_total_catch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Performance Metric: Calculate total catch over a range of years — get_total_catch","text":"","code":"if (FALSE) { total_catch <- get_total_catch(datfile = \"ss3model/dat.ss\", yrs = 25:100) total_catch }"},{"path":"/reference/last_yr_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Last year catch used in the future for management strategy — last_yr_catch","title":"Last year catch used in the future for management strategy — last_yr_catch","text":"Last year catch used future management strategy","code":""},{"path":"/reference/last_yr_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Last year catch used in the future for management strategy — last_yr_catch","text":"","code":"last_yr_catch(OM_out_dir, OM_dat, dat_yrs, ...)"},{"path":"/reference/last_yr_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Last year catch used in the future for management strategy — last_yr_catch","text":"OM_out_dir full path directory OM run. OM_dat valid SS data file read using r4ss. particular, sampled data. dat_yrs years added new model? Ignored init_loop TRUE. ... additional parameters","code":""},{"path":"/reference/last_yr_catch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Last year catch used in the future for management strategy — last_yr_catch","text":"Kathryn Doering","code":""},{"path":"/reference/locate_in_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate the OM model files — locate_in_dirs","title":"Locate the OM model files — locate_in_dirs","text":"Locate OM model files","code":""},{"path":"/reference/locate_in_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate the OM model files — locate_in_dirs","text":"","code":"locate_in_dirs(OM_name = NULL, OM_in_dir = NULL)"},{"path":"/reference/locate_in_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate the OM model files — locate_in_dirs","text":"OM_name Name operating model (OM). OM_in_dir Relative absolute path operating model, using model outside SSMSE package. string.","code":""},{"path":"/reference/locate_in_dirs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate the OM model files — locate_in_dirs","text":"list comonent, OM_in_dir, contains model location","code":""},{"path":"/reference/match_parname.html","id":null,"dir":"Reference","previous_headings":"","what":"Match parameter name to parameter names in the par file — match_parname","title":"Match parameter name to parameter names in the par file — match_parname","text":"Match parameter name parameter names par file","code":""},{"path":"/reference/match_parname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match parameter name to parameter names in the par file — match_parname","text":"","code":"match_parname(list_pars, parlist)"},{"path":"/reference/match_parname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match parameter name to parameter names in the par file — match_parname","text":"list_pars parameter names find parlist parameter file read r4ss::SS_readpar_3.30","code":""},{"path":"/reference/match_parname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match parameter name to parameter names in the par file — match_parname","text":"dataframe containing parameter name object par object.","code":""},{"path":"/reference/match_parname.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Match parameter name to parameter names in the par file — match_parname","text":"Kathryn Doering","code":""},{"path":"/reference/no_catch.html","id":null,"dir":"Reference","previous_headings":"","what":"No Catch in the future management strategy — no_catch","title":"No Catch in the future management strategy — no_catch","text":"Catch future management strategy","code":""},{"path":"/reference/no_catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No Catch in the future management strategy — no_catch","text":"","code":"no_catch(OM_out_dir, OM_dat, dat_yrs, ...)"},{"path":"/reference/no_catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No Catch in the future management strategy — no_catch","text":"OM_out_dir full path directory OM run. OM_dat valid SS data file read using r4ss. particular, sampled data. dat_yrs years added new model? Ignored init_loop TRUE. ... additional parameters","code":""},{"path":"/reference/no_catch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"No Catch in the future management strategy — no_catch","text":"Kathryn Doering","code":""},{"path":"/reference/parse_MS.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse management strategy options — parse_MS","title":"Parse management strategy options — parse_MS","text":"function matches management strategy correct method. checks errors.","code":""},{"path":"/reference/parse_MS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse management strategy options — parse_MS","text":"","code":"parse_MS(   MS,   EM_out_dir = NULL,   EM_init_dir = NULL,   init_loop = TRUE,   OM_dat,   OM_out_dir = NULL,   verbose = FALSE,   nyrs_assess,   dat_yrs,   future_om_list = NULL,   sample_struct = NULL,   interim_struct = NULL,   seed = NULL )"},{"path":"/reference/parse_MS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse management strategy options — parse_MS","text":"MS management strategy use. Current options :  \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify management strategies function. example, function called \"my_ms\" user specify MS = \"my_ms\" specify path file containing function custom_MS_source. EM_out_dir Relative absolute path estimation model, using model outside SSMSE package. EM_init_dir Initialization director retains reference files interim assessments init_loop Logical. first initialization loop MSE, init_loop TRUE. loops, FALSE. OM_dat valid SS data file read using r4ss. particular, sampled data. OM_out_dir full path directory OM run. verbose Want verbose output? Defaults FALSE. nyrs_assess number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. dat_yrs years added new model? Ignored init_loop TRUE. future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. interim_struct optional including many years average , fleet weights, scaling rate (Beta) catch relative index change fleet, reference year fleet (either fixed year <=0 relative end_yr, fixed year stay constant simulation relative year progress simulation). seed random seed reproducible results possible.","code":""},{"path":"/reference/parse_MS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse management strategy options — parse_MS","text":"Kathryn Doering & Nathan Vaughan","code":""},{"path":"/reference/plot_comp_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot comp data, expected values, and sampled data for 1 scenario — plot_comp_sampling","title":"Plot comp data, expected values, and sampled data for 1 scenario — plot_comp_sampling","text":"Creates plot can used see sampling lines data expected values index abundance","code":""},{"path":"/reference/plot_comp_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot comp data, expected values, and sampled data for 1 scenario — plot_comp_sampling","text":"","code":"plot_comp_sampling(dir = getwd(), comp_type = c(\"agecomp\", \"lencomp\"))"},{"path":"/reference/plot_comp_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot comp data, expected values, and sampled data for 1 scenario — plot_comp_sampling","text":"dir Path directory containing 1 scenario. Defaults current working directory. comp_type Type composition data, age length. Defaults age.","code":""},{"path":"/reference/plot_comp_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot comp data, expected values, and sampled data for 1 scenario — plot_comp_sampling","text":"list containing 2 components: 1) ggplot object 2) dataframe used make ggplot object","code":""},{"path":"/reference/plot_comp_sampling.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot comp data, expected values, and sampled data for 1 scenario — plot_comp_sampling","text":"Kathryn Doering","code":""},{"path":"/reference/plot_index_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot index data, expected values, and sampled data for 1 scenario — plot_index_sampling","title":"Plot index data, expected values, and sampled data for 1 scenario — plot_index_sampling","text":"Creates plot can used see sampling lines data expected values index abundance","code":""},{"path":"/reference/plot_index_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot index data, expected values, and sampled data for 1 scenario — plot_index_sampling","text":"","code":"plot_index_sampling(dir = getwd())"},{"path":"/reference/plot_index_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot index data, expected values, and sampled data for 1 scenario — plot_index_sampling","text":"dir Path directory containing 1 scenario. Defaults current working directory.","code":""},{"path":"/reference/plot_index_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot index data, expected values, and sampled data for 1 scenario — plot_index_sampling","text":"list containing 2 components: 1) ggplot object 2) dataframe used make ggplot object","code":""},{"path":"/reference/plot_index_sampling.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot index data, expected values, and sampled data for 1 scenario — plot_index_sampling","text":"Kathryn Doering","code":""},{"path":"/reference/r4ss_obj_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Error if object is not an r4ss object — r4ss_obj_err","title":"Error if object is not an r4ss object — r4ss_obj_err","text":"Error object r4ss object","code":""},{"path":"/reference/r4ss_obj_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error if object is not an r4ss object — r4ss_obj_err","text":"","code":"r4ss_obj_err(obj_name = \"object \", type = \"list\")"},{"path":"/reference/r4ss_obj_err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error if object is not an r4ss object — r4ss_obj_err","text":"obj_name Object name r4ss object print error type Type obj_name expected , ,","code":""},{"path":"/reference/r4ss_obj_err.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Error if object is not an r4ss object — r4ss_obj_err","text":"Kathryn Doering","code":""},{"path":"/reference/rm_sample_struct_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the historical sampling structure — rm_sample_struct_hist","title":"Remove the historical sampling structure — rm_sample_struct_hist","text":"Remove historical sampling structure","code":""},{"path":"/reference/rm_sample_struct_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the historical sampling structure — rm_sample_struct_hist","text":"","code":"rm_sample_struct_hist(sample_struct_hist, dat)"},{"path":"/reference/rm_sample_struct_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove the historical sampling structure — rm_sample_struct_hist","text":"sample_struct_hist optional list including years sampled historical period data generated OM. left NULL, sampling scheme used OM's data file. NULL, year. dat data file, read using r4ss","code":""},{"path":"/reference/rm_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"remove vals in 2 list components with the same name — rm_vals","title":"remove vals in 2 list components with the same name — rm_vals","text":"2 list components name, remove vals compare object","code":""},{"path":"/reference/rm_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove vals in 2 list components with the same name — rm_vals","text":"","code":"rm_vals(return_obj, compare_obj, name_in_obj, colnames)"},{"path":"/reference/rm_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove vals in 2 list components with the same name — rm_vals","text":"return_obj object (containing list component name obj) modified. combinations columns found compare object retained compare_obj object (containing list component name_in_obj) return_obj compared name_in_obj name list elements use; name must return_obj compare_obj. list element must data frame column names colnames column names within name_in_obj list components compare.","code":""},{"path":"/reference/rm_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove vals in 2 list components with the same name — rm_vals","text":"return_obj[[name_in_obj]], modified include elements present compare_obj[[name_in_obj]].","code":""},{"path":"/reference/rm_vals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"remove vals in 2 list components with the same name — rm_vals","text":"Kathryn Doering","code":""},{"path":"/reference/run_EM.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the estimation model — run_EM","title":"Run the estimation model — run_EM","text":"Runs estimation model performs checks desired.","code":""},{"path":"/reference/run_EM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the estimation model — run_EM","text":"","code":"run_EM(   EM_dir,   hess = FALSE,   check_converged = TRUE,   set_use_par = FALSE,   verbose = FALSE )"},{"path":"/reference/run_EM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the estimation model — run_EM","text":"EM_dir Absolute relative path estimation model directory hess Get hessian model run? Defaults FALSE. estimating hessian speed run, estimates error generated. check_converged Perform checks see model converged? Defaults TRUE. set_use_par input values read .par file? TRUE, change setting starter file; otherwise, use setting already starter file, may may read .par file. verbose Want verbose output? Defaults FALSE.","code":""},{"path":"/reference/run_EM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run the estimation model — run_EM","text":"Kathryn Doering","code":""},{"path":"/reference/run_OM.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial run of the OM — run_OM","title":"Initial run of the OM — run_OM","text":"function used initialize OM get either expected values bootstrap.","code":""},{"path":"/reference/run_OM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial run of the OM — run_OM","text":"","code":"run_OM(   OM_dir,   boot = TRUE,   nboot = 1,   init_run = FALSE,   verbose = FALSE,   debug_par_run = TRUE,   sample_catch = FALSE,   seed = NULL )"},{"path":"/reference/run_OM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial run of the OM — run_OM","text":"OM_dir full path OM directory. boot Return bootstrap dataset? TRUE, function returns number bootstrapped dataset specified nboot. FALSE, returns expected values. nboot number bootstrapped data set. value used boot = TRUE. Note numbering correspond numbering section r4ss::SS_readdat. E.g., specifying section = 3 SS_readdat equivalent specifying nboot = 1. init_run initial iteration OM? Defaults FALSE. verbose Want verbose output? Defaults FALSE. debug_par_run set TRUE, run fails, new folder called error_check created, model run control start values instead ss.par. 2 par files compared help debug issue model run. Defaults TRUE. sample_catch catch sampled fixed OM values? Defaults FALSE. seed random seed reproducible results possible.","code":""},{"path":"/reference/run_OM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initial run of the OM — run_OM","text":"Kathryn Doering","code":""},{"path":"/reference/run_SSMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"run an MSE using SS OMs — run_SSMSE","title":"run an MSE using SS OMs — run_SSMSE","text":"High level function run management strategy evaluation using Stock Synthesis Operating model(s). examples information use SSMSE, see SSMSE user manual.","code":""},{"path":"/reference/run_SSMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run an MSE using SS OMs — run_SSMSE","text":"","code":"run_SSMSE(   scen_name_vec,   out_dir_scen_vec = NULL,   iter_vec,   OM_name_vec = NULL,   OM_in_dir_vec = NULL,   EM_name_vec = NULL,   EM_in_dir_vec = NULL,   run_EM_last_yr = FALSE,   MS_vec = c(\"EM\", \"no_catch\", \"Interim\"),   custom_MS_source = NULL,   use_SS_boot_vec = TRUE,   nyrs_vec,   nyrs_assess_vec,   sample_struct_list = NULL,   future_om_list = NULL,   sample_struct_hist_list = NULL,   sample_catch_vec = FALSE,   interim_struct_list = NULL,   verbose = FALSE,   seed = NULL,   n_F_search_loops = 20,   tolerance_F_search = 0.001,   run_parallel = FALSE,   n_cores = NULL )"},{"path":"/reference/run_SSMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run an MSE using SS OMs — run_SSMSE","text":"scen_name_vec vector containing names scenarios. string directory containing model runs scenario.s out_dir_scen_vec directory write output. NULL, default working directory. iter_vec number iterations per scenario. vector integers order scen_name_vec. OM_name_vec Names valid Stock Synthesis stock assessment model. see names built-models, type list.dirs(system.file(\"extdata\", \"models\", package = \"SSMSE\"),full.names = FALSE, recursive = FALSE) R console. OM_in_dir_vec Vector relative absolute paths operating model, using model outside SSMSE package. EM_name_vec NULL unless MS = \"EM\". Name valid Stock Synthesis stock assessment model use EM. value EM_name NULL  MS = \"EM\", SSMSE look estimation model path specified EM_in_dir. valid inputs EM_name : \"cod\" NULL. EM_in_dir_vec Relative absolute path estimation model, using model outside SSMSE package. Note value NULL MS value \"EM\". run_EM_last_yr MS implemented get future catch last year assessment year? TRUE/FALSE option, scenarios iterations. Defaults FALSE. MS_vec Vector management strategies. Current options : \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify managment strategies function. use function, must available global enviroment specified name MS. example, function called \"my_ms\" user make available global environment specify \"my_ms\" component MS_vec. custom_MS_source file location source code custom MS models used simulation. SSMSE source file contain function/s whose name/s match custom MS models included MS_vec. learn using custom management strategies, see using Custom Management Stratey/Procedure section SSMSE User Manual. use_SS_boot_vec bootstrapped data set generated SS used? Defaults TRUE. nyrs_vec Number years beyond years included OM run MSE. single integer value. nyrs_assess_vec number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. (NOTE: made flexible instead reading vector assessment years, users specify irregular numbers yrs assessments.) sample_struct_list optional list lists including years, seasons, fleets  added OM EM different types data. NULL, data structure try infered pattern found datatypes within EM datafiles. Include strucutre number years extend model . future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. sample_struct_hist_list optional list lists including years sampled historical period data generated OM. left NULL, sampling scheme used OM's data file. NULL, year sample_catch_vec catch sampled fixed OM values? can single Boolean (TRUE FALSE) apply scenarios vector length number scenarios. Defaults FALSE. interim_struct_list optional list parameters control interim assessment example structure , Beta=positive value inversely proportional risk, MA_years= number years average index observations calculating deviations, assess_freq=number years full assessments interim assessment happen every year, Index_weights vector length n indexes weights indexes multi index inference. interim_struct_list<-list(Beta=1,MA_years=3,assess_freq=5,Index_weights=rep(1,max(ref_index[,3]))) verbose Want verbose output? Defaults FALSE. seed Input fixed seed replicate previous simulation runs. Seed can single value global seed, n_scenarios+1 length vector scenario specific global seed, n_iterations+n_scenarios+1 length vector iteration scenario global seeds. Can also list object single value seed[[\"global\"]], vector seed[[\"scenario\"]], multiple vectors iteration specific seeds seed[[\"iter\"]][[1:n_scenarios]]. n_F_search_loops Number times try find F achieves catches input OM. Defaults 20. tolerance_F_search far apart input catch achieved catch can tried find F achieves catch input OM. Defaults 0.001. run_parallel Option use parallel processing iterations. Defaults FALSE n_cores many cores use running parallel defaults n_cores available - 1 (also capped one less number cores available)","code":""},{"path":"/reference/run_SSMSE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run an MSE using SS OMs — run_SSMSE","text":"Kathryn Doering & Nathan Vaughan","code":""},{"path":"/reference/run_SSMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run an MSE using SS OMs — run_SSMSE","text":"","code":"if (FALSE) { my_dir <- file.path(tempdir(), \"ex-run_SSMSE\") dir.create(my_dir) # For the EM, use the specified data structure my_sample_struct_list <- list(   NULL,   list(     catch = data.frame(       Yr = 101:106,       Seas = 1,       FltSvy = 1,       SE = 0.05     ),     CPUE = data.frame(       Yr = c(102, 105),       Seas = 7,       FltSvy = 2,       SE = 0.01     ),     lencomp = data.frame(       Yr = c(102, 105), Seas = 1,       FltSvy = 1, Sex = 0,       Part = 0, Nsamp = 100     ),   ) ) # Use the default parameter values, except for the once specified. # Note that the scen_list, either specified or internally created in the # function is returned. input_list <- run_SSMSE(   scen_name_vec = c(\"scen_1\", \"scen_2\"),   out_dir_scen_vec = my_dir,   iter_vec = c(2, 2),   OM_name_vec = c(\"cod\", \"cod\"),   OM_in_dir_vec = NULL,   EM_name_vec = c(NA, \"cod\"),   EM_in_dir_vec = NULL,   MS_vec = c(\"no_catch\", \"EM\"),   use_SS_boot_vec = TRUE,   nyrs_vec = 6,   nyrs_assess_vec = 3,   scope = c(\"2\", \"1\", \"3\"),   rec_dev_pattern = c(     \"none\", \"rand\", \"AutoCorr_rand\",     \"AutoCorr_Spec\", \"vector\"   ),   rec_dev_pars = NULL,   impl_error_pattern = c(\"none\", \"rand\", \"user\"),   impl_error_pars = NULL,   verbose = FALSE,   seed = NULL,   sample_struct_list = my_sample_struct_list ) unlink(my_dir, recursive = TRUE) }"},{"path":"/reference/run_SSMSE_iter.html","id":null,"dir":"Reference","previous_headings":"","what":"Run one iteration of an MSE using SS OM — run_SSMSE_iter","title":"Run one iteration of an MSE using SS OM — run_SSMSE_iter","text":"High level function run 1 iteration scenario management strategy evaluation using Stock Synthesis Operating model.","code":""},{"path":"/reference/run_SSMSE_iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run one iteration of an MSE using SS OM — run_SSMSE_iter","text":"","code":"run_SSMSE_iter(   out_dir = NULL,   OM_name = \"cod\",   OM_in_dir = NULL,   EM_name = NULL,   EM_in_dir = NULL,   run_EM_last_yr = FALSE,   MS = \"last_yr_catch\",   custom_MS_source = NULL,   use_SS_boot = TRUE,   nyrs = 100,   nyrs_assess = 3,   nyrs_lag = 0,   nscen = 1,   scen_name = NULL,   niter = 1,   iter_seed = NULL,   sample_struct = NULL,   future_om_list = NULL,   sample_struct_hist = NULL,   sample_catch = FALSE,   interim_struct = NULL,   n_F_search_loops = 20,   tolerance_F_search = 0.001,   verbose = FALSE )"},{"path":"/reference/run_SSMSE_iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run one iteration of an MSE using SS OM — run_SSMSE_iter","text":"out_dir directory write output. NULL, default working directory. OM_name Name operating model (OM). OM_in_dir Relative absolute path operating model, using model outside SSMSE package. string. EM_name Name valid Stock Synthesis stock assessment model use EM. value EM_name NULL  MS = \"EM\", SSMSE look estimation model path specified EM_in_dir. NULL. EM_in_dir Relative absolute path estimation model, run_EM_last_yr MS implemented get future catch last year assessment year? TRUE/FALSE option, scenarios iterations. Defaults FALSE. MS management strategy use. Current options :  \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify management strategies function. example, function called \"my_ms\" user specify MS = \"my_ms\" specify path file containing function custom_MS_source. custom_MS_source file location source code custom MS models used simulation. SSMSE source file contain function/s whose name/s match custom MS models included MS_vec. learn using custom management strategies, see using Custom Management Stratey/Procedure section SSMSE User Manual. use_SS_boot bootstrapped data set generated SS used? Defaults TRUE. nyrs Number years beyond years included OM run MSE. single integer value. nyrs_assess number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. (NOTE: make flexible instead reading vector assessment years, users specify irregular numbers yrs assessments.) nyrs_lag number years lag obtaining data. .e. number years post EM assessment end yr advice can implemented. defaults 0. nscen scenario . Integer value >=1 scen_name Name scenario. directory containing model runs scenario stored within folder name. niter iteration number, also name folder results written . iter_seed List containing fixed seeds iteration. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. sample_struct_hist optional list including years sampled historical period data generated OM. left NULL, sampling scheme used OM's data file. NULL, year. sample_catch catch sampled fixed OM values? Defaults FALSE. interim_struct optional list parameters control interim assessment example structure , Beta=positive value inversely proportional risk, MA_years= number years average index observations calculating deviations, assess_freq=number years full assessments interim assessment happen every year, Index_weights vector length n indexes weights indexes multi index inference.   n_F_search_loops Number times try find F achieves catches input OM. Defaults 20. tolerance_F_search far apart input catch achieved catch can tried find F achieves catch input OM. Defaults 0.001. verbose Want verbose output? Defaults FALSE.","code":"interim_struct<-list(Beta = 1,                      MA_years = 3,                      assess_freq = 5,                      Index_weights = rep(1, max(ref_index[, 3])))"},{"path":"/reference/run_SSMSE_iter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run one iteration of an MSE using SS OM — run_SSMSE_iter","text":"Kathryn Doering & Nathan Vaughan","code":""},{"path":"/reference/run_SSMSE_iter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run one iteration of an MSE using SS OM — run_SSMSE_iter","text":"","code":"if (FALSE) { # Create a temporary folder for the output temp_path <- file.path(tempdir(), \"run_SSMSE_iter-ex\") dir.create(temp_path)  # run 1 iteration and 1 scenario of SSMSE run_SSMSE_iter(   OM_name = \"cod\",   MS = \"no_catch\",   out_dir = temp_path,   nyrs = 6,   nyrs_assess = 3 ) unlink(file.path(temp_path, \"1\"), recursive = TRUE) # run 1 iteration and 1 scenario of SSMSE using an EM. run_SSMSE_iter(   OM_name = \"cod\",   MS = \"EM\",   out_dir = temp_path,   EM_name = \"cod\",   nyrs = 6,   nyrs_assess = 3,   sample_struct = list(     catch = data.frame(Yr = 101:106, Seas = 1, FltSvy = 1, SE = 0.05),     CPUE = data.frame(Yr = c(102, 105), Seas = 7, FltSvy = 2, SE = 0.01),     lencomp = data.frame(       Yr = c(102, 105), Seas = 1, FltSvy = 1,       Sex = 0, Part = 0, Nsamp = 100     ),     agecomp = data.frame(       Yr = c(102, 105), Seas = 1, FltSvy = 2,       Sex = 0, Part = 0, Ageerr = 1,       Lbin_lo = -1, Lbin_hi = -1, Nsamp = 50     )   ) ) unlink(temp_path, recursive = TRUE) }"},{"path":"/reference/run_SSMSE_scen.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an MSE scenario using SS OM — run_SSMSE_scen","title":"Run an MSE scenario using SS OM — run_SSMSE_scen","text":"High level function run 1 scenario (potentially many iterations) management strategy evaluation using Stock Synthesis Operating Model","code":""},{"path":"/reference/run_SSMSE_scen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an MSE scenario using SS OM — run_SSMSE_scen","text":"","code":"run_SSMSE_scen(   scen_name = \"scen_1\",   nscen = 1,   out_dir_scen = NULL,   iter = 2,   OM_name = \"cod\",   OM_in_dir = NULL,   EM_name = NULL,   EM_in_dir = NULL,   run_EM_last_yr = FALSE,   MS = \"no_catch\",   custom_MS_source = NULL,   use_SS_boot = TRUE,   nyrs = 100,   nyrs_assess = 3,   scen_seed = NULL,   sample_struct = NULL,   future_om_list = NULL,   sample_struct_hist = NULL,   sample_catch = FALSE,   interim_struct = NULL,   verbose = FALSE,   run_parallel = FALSE,   n_cores = NULL,   n_F_search_loops = 20,   tolerance_F_search = 0.001 )"},{"path":"/reference/run_SSMSE_scen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an MSE scenario using SS OM — run_SSMSE_scen","text":"scen_name Name scenario. directory containing model runs scenario stored within folder name. nscen scenario . Integer value >=1 out_dir_scen directory write output. NULL, iter number iterations scenario. single integer value. OM_name Name operating model (OM). OM_in_dir Relative absolute path operating model, using model outside SSMSE package. string. EM_name Name valid Stock Synthesis stock assessment model use EM. value EM_name NULL  MS = \"EM\", SSMSE look estimation model path specified EM_in_dir. NULL. EM_in_dir Relative absolute path estimation model, run_EM_last_yr MS implemented get future catch last year assessment year? TRUE/FALSE option, scenarios iterations. Defaults FALSE. MS management strategy use. Current options :  \"last_yr_catch\" uses previous year's catch; \"no_catch\" uses 0 catch; \"EM\" uses stock synthesis model estimation method management strategy defined forecast file stock synthesis estimation method; \"Interim\" modify catch based survey predictions assessments. Users can also specify management strategies function. example, function called \"my_ms\" user specify MS = \"my_ms\" specify path file containing function custom_MS_source. custom_MS_source file location source code custom MS models used simulation. SSMSE source file contain function/s whose name/s match custom MS models included MS_vec. learn using custom management strategies, see using Custom Management Stratey/Procedure section SSMSE User Manual. use_SS_boot bootstrapped data set generated SS used? Defaults TRUE. nyrs Number years beyond years included OM run MSE. single integer value. nyrs_assess number years assessments. E.g., assessment conducted every 3 years, put 3 . single integer value. (NOTE: make flexible instead reading vector assessment years, users specify irregular numbers yrs assessments.) scen_seed List containing fixed seeds scenario iterations. sample_struct optional list including years, seasons, fleets  added OM EM different types data. NULL, data structure try inferred pattern found datatypes within EM datafiles. Include structure number years extend model . Note data specified using list component names column names used r4ss::SS_readdat(). run_SSMSE_iter function examples give example structure . Running function create_sample_struct() also produce sample_struct object correct form. Can NULL MS EM. future_om_list optional list lists including changes made end year input model. first level list element outlines 1 change made operating model. see example, try running create_future_om_list. Defaults NULL, implies model extended forward time assuming original model structure. sample_struct_hist optional list including years sampled historical period data generated OM. left NULL, sampling scheme used OM's data file. NULL, year. sample_catch catch sampled fixed OM values? Defaults FALSE. interim_struct optional list parameters control interim assessment example structure , Beta=positive value inversely proportional risk, MA_years= number years average index observations calculating deviations, assess_freq=number years full assessments interim assessment happen every year, Index_weights vector length n indexes weights indexes multi index inference.   verbose Want verbose output? Defaults FALSE. run_parallel Option use parallel processing iterations. Defaults FALSE n_cores many cores use running parallel defaults n_cores available - 1 (also capped one less number cores available) n_F_search_loops Number times try find F achieves catches input OM. Defaults 20. tolerance_F_search far apart input catch achieved catch can tried find F achieves catch input OM. Defaults 0.001.","code":"interim_struct<-list(Beta = 1,                      MA_years = 3,                      assess_freq = 5,                      Index_weights = rep(1, max(ref_index[, 3])))"},{"path":"/reference/run_SSMSE_scen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run an MSE scenario using SS OM — run_SSMSE_scen","text":"Kathryn Doering & Nathan Vaughan","code":""},{"path":"/reference/run_SSMSE_scen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run an MSE scenario using SS OM — run_SSMSE_scen","text":"","code":"if (FALSE) { # Create a temporary folder for the output and set the working directory: temp_path <- file.path(tempdir(), \"run_SSMSE_scen-example\") dir.create(temp_path, showWarnings = FALSE)  # run 2 iteration and 1 scenario of SSMSE run_SSMSE_scen(   scen_name = \"no_catch\",   iter = 1:2,   OM_name = \"cod\",   MS = \"no_catch\",   out_dir_scen = temp_path,   nyrs = 6,   nyrs_assess = 3 ) unlink(temp_path, recursive = TRUE) }"},{"path":"/reference/run_ss_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an operating or estimation model — run_ss_model","title":"Run an operating or estimation model — run_ss_model","text":"function takes care calling SS. Importantly, parses whether user Unix Windows calls binary correctly. lower-level function meant called higher level functions. Modified run_ss3model ss3sim.","code":""},{"path":"/reference/run_ss_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an operating or estimation model — run_ss_model","text":"","code":"run_ss_model(   dir,   admb_options = \"\",   ss_bin = \"ss\",   ignore.stdout = TRUE,   admb_pause = 0.05,   show.output.on.console = FALSE,   check_run = TRUE,   debug_par_run = FALSE,   verbose = FALSE,   ... )"},{"path":"/reference/run_ss_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an operating or estimation model — run_ss_model","text":"dir full relative path model directory admb_options options pass SS command. form '-option'. Note checks done ensure valid ADMB command ss_bin Name SS executable. Defaults \"ss\" ignore.stdout Passed system. TRUE ADMB output printed screen. slightly faster. Set FALSE help debugging. admb_pause length time (seconds) pause running simulation model. can necessary certain computers file writing can slightly delayed. example, computers files written network connection. output files finished writing R starts looking output simulation crash error missing files. default value set 0.01 seconds, just safe. show.output..console Logical: passed system. check_run checked model ran deleting data.ss_new file one exists checking one created? Defaults TRUE. debug_par_run set TRUE, run fails, new folder called error_check created, model run control start values instead ss.par. 2 par files compared help debug issue model run. Defaults FALSE. verbose Want verbose output? Defaults FALSE. ... Anything else pass system.","code":""},{"path":"/reference/run_ss_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run an operating or estimation model — run_ss_model","text":"Sean C. Anderson, Kathryn Doering","code":""},{"path":"/reference/sample_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample vals from normal random, lognormal random, or modified AR-1\nprocess. — sample_vals","title":"Sample vals from normal random, lognormal random, or modified AR-1\nprocess. — sample_vals","text":"Sample vals normal random, lognormal random, modified AR-1 process.","code":""},{"path":"/reference/sample_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample vals from normal random, lognormal random, or modified AR-1\nprocess. — sample_vals","text":"","code":"sample_vals(mean, sd, ar_1_phi = 0, ndevs, dist = c(\"normal\", \"lognormal\"))"},{"path":"/reference/sample_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample vals from normal random, lognormal random, or modified AR-1\nprocess. — sample_vals","text":"mean single value vector mean parameters sd single value vector sd parameter ar_1_phi phi (coefficient) value ar 1 process. -1 1. 0 means AR 1 process used. 1 indicates random walk. single value vector. ndevs number sampled values expect dist distribution sample .","code":""},{"path":"/reference/sample_vals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample vals from normal random, lognormal random, or modified AR-1\nprocess. — sample_vals","text":"Kathryn Doering","code":""},{"path":"/reference/set_MSE_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the initial global, scenario, and iteration seeds — set_MSE_seeds","title":"Set the initial global, scenario, and iteration seeds — set_MSE_seeds","text":"Set initial global, scenario, iteration seeds","code":""},{"path":"/reference/set_MSE_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the initial global, scenario, and iteration seeds — set_MSE_seeds","text":"","code":"set_MSE_seeds(seed = NULL, iter_vec)"},{"path":"/reference/set_MSE_seeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the initial global, scenario, and iteration seeds — set_MSE_seeds","text":"seed Input fixed seed replicate previous simulation runs. Seed can single value global seed, n_scenarios+1 length vector scenario specific global seed, n_iterations+n_scenarios+1 length vector iteration scenario global seeds. Can also list object single value seed[[\"global\"]], vector seed[[\"scenario\"]], multiple vectors iteration specific seeds seed[[\"iter\"]][[1:n_scenarios]]. iter_vec number iterations per scenario. vector integers order scen_name_vec.","code":""},{"path":"/reference/set_MSE_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the initial global, scenario, and iteration seeds — set_MSE_seeds","text":"list length 3 1) global seed value; 2) scenario seed values; 3) iteration seed values.","code":""},{"path":"/reference/set_MSE_seeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the initial global, scenario, and iteration seeds — set_MSE_seeds","text":"","code":"seeds <- set_MSE_seeds(seed = seq(10, 80, by = 10), iter_vec = c(2, 3))"},{"path":"/reference/test_no_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Change a model from running with par to running without par — test_no_par","title":"Change a model from running with par to running without par — test_no_par","text":"intention function help troubleshooting issues par file. intended mostly help troubleshooting developing SSMSE package, may also helpful runtime testing.","code":""},{"path":"/reference/test_no_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change a model from running with par to running without par — test_no_par","text":"","code":"test_no_par(orig_mod_dir, new_mod_dir)"},{"path":"/reference/test_no_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change a model from running with par to running without par — test_no_par","text":"orig_mod_dir original model directory new_mod_dir new model directory (folder need exist)","code":""},{"path":"/reference/update_OM.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend the OM forward using next years' catch — update_OM","title":"Extend the OM forward using next years' catch — update_OM","text":"Add EM defined catch values next years.","code":""},{"path":"/reference/update_OM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend the OM forward using next years' catch — update_OM","text":"","code":"update_OM(   OM_dir,   catch = NULL,   harvest_rate = NULL,   catch_basis = NULL,   F_limit = NULL,   EM_pars = NULL,   write_dat = TRUE,   impl_error = NULL,   verbose = FALSE,   seed = NULL,   n_F_search_loops = 20,   tolerance_F_search = 0.001 )"},{"path":"/reference/update_OM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend the OM forward using next years' catch — update_OM","text":"OM_dir full path OM directory. catch dataframe catch values associated information add OM. column names SS data file (e.g., year,    season, fleet,    catch,    catch_se). Must input either catch /harvest rate data frame. input catch override harvest rate management unit harvest rate used starting guess search. harvest_rate dataframe harvest rate (F) values associated information add OM. column names SS datafile. harvest rate input without corresponding catch OM assume effort based management use harvest rate directly implementation error added. catch_basis data frame columns year, seas, fleet, basis specifies catch reference retained biomass (1) dead biomass (2). year/season/fleet listed assume value 1 referencing retained biomass. Entering -99 year, season, fleet apply basis across values variable (.e. single row -99, -99, -99, 1 implement retained biomass cases) F_limit data frame columns year, fleet, season, limit specifies maximum F allowed OM negative value specify multiple historic maximum F. year/season/fleet listed assume value 1.5. Entering -99 year, season, fleet apply limit across values variable (.e. single row -99, -99, -99, -2 implement cap twice historic maximum F cases) EM_pars dataframe parameter value updates modify OM write_dat datafile overwritten? Defaults TRUE. impl_error implementation error verbose Want verbose output? Defaults FALSE. seed random seed reproducible results possible. n_F_search_loops Number times try find F achieves catches input OM. Defaults 20. tolerance_F_search far apart input catch achieved catch can tried find F achieves catch input OM. Defaults 0.001.","code":""},{"path":"/reference/update_OM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend the OM forward using next years' catch — update_OM","text":"new dat list object (format created r4ss::SS_readdat) extended forward  read r4ss function SS_readdat","code":""},{"path":"/reference/update_OM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extend the OM forward using next years' catch — update_OM","text":"Kathryn Doering & Nathan Vaughan","code":""},{"path":"/reference/update_basevals_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a sequence of base parameter annual values to account for a time varying block effects — update_basevals_blocks","title":"Update a sequence of base parameter annual values to account for a time varying block effects — update_basevals_blocks","text":"Update sequence base parameter annual values account time varying block effects","code":""},{"path":"/reference/update_basevals_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a sequence of base parameter annual values to account for a time varying block effects — update_basevals_blocks","text":"","code":"update_basevals_blocks(   base_vals,   base_years,   temp_block,   current_par,   ctl,   dat,   temp_ctl,   base_range,   baseparm,   base_bounds )"},{"path":"/reference/update_basevals_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a sequence of base parameter annual values to account for a time varying block effects — update_basevals_blocks","text":"base_vals vector base parameter values updated include impact time varying block change base_years vector years base values needed temp_block timevarying parameter lines block effects base parameter current_par index current parameter updated ctl control file read r4ss::SS_readctl. dat data file read r4ss::SS_readdat. temp_ctl subset control file representing parameter section interest (.e. MG, SR, Q, Selectivity) base_range difference base parameters max min bounds baseparm value base parameter base_bounds min max bounds base parameter","code":""},{"path":"/reference/update_basevals_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a sequence of base parameter annual values to account for a time varying block effects — update_basevals_blocks","text":"modified parameter value series incorporates appropriate time varying block effects.","code":""},{"path":"/reference/update_basevals_blocks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update a sequence of base parameter annual values to account for a time varying block effects — update_basevals_blocks","text":"Nathan Vaughan","code":""},{"path":"/reference/update_basevals_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a sequence of base parameter annual values to account for a time varying deviation effects — update_basevals_dev","title":"Update a sequence of base parameter annual values to account for a time varying deviation effects — update_basevals_dev","text":"Update sequence base parameter annual values account time varying deviation effects","code":""},{"path":"/reference/update_basevals_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a sequence of base parameter annual values to account for a time varying deviation effects — update_basevals_dev","text":"","code":"update_basevals_dev(   base_vals,   temp_dev,   dev_seq,   current_par,   temp_ctl,   base_range,   base_bounds )"},{"path":"/reference/update_basevals_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a sequence of base parameter annual values to account for a time varying deviation effects — update_basevals_dev","text":"base_vals vector base parameter values updated include impact time varying deviations temp_dev time varying parameter lines deviations base parameter dev_seq vector parameter deviations applied base values current_par index current parameter updated temp_ctl subset control file representing parameter section interest (.e. MG, SR, Q, Selectivity) base_range difference base parameters max min bounds base_bounds min max bounds base parameter","code":""},{"path":"/reference/update_basevals_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a sequence of base parameter annual values to account for a time varying deviation effects — update_basevals_dev","text":"modified parameter series incorporates appropriate deviations.","code":""},{"path":"/reference/update_basevals_dev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update a sequence of base parameter annual values to account for a time varying deviation effects — update_basevals_dev","text":"Nathan Vaughan","code":""},{"path":"/reference/update_basevals_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a sequence of base parameter annual values to account for a time varying environmental effects — update_basevals_env","title":"Update a sequence of base parameter annual values to account for a time varying environmental effects — update_basevals_env","text":"Update sequence base parameter annual values account time varying environmental effects","code":""},{"path":"/reference/update_basevals_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a sequence of base parameter annual values to account for a time varying environmental effects — update_basevals_env","text":"","code":"update_basevals_env(   base_vals,   base_years,   temp_env,   current_par,   timeseries,   temp_ctl,   dat,   base_range,   base_bounds,   parlist )"},{"path":"/reference/update_basevals_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a sequence of base parameter annual values to account for a time varying environmental effects — update_basevals_env","text":"base_vals vector base parameter values updated include impact time varying environmental effects base_years vector years base values needed temp_env time varying parameter lines environmental effects base parameter current_par index current parameter updated timeseries timeseries table r4ss::SS_output(). temp_ctl subset control file representing parameter section interest (.e. MG, SR, Q, Selectivity) dat datafile read r4ss::SS_readdat base_range difference base parameters max min bounds base_bounds min max bounds base parameter parlist parameter file read r4ss::SS_readpar_3.30","code":""},{"path":"/reference/update_basevals_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a sequence of base parameter annual values to account for a time varying environmental effects — update_basevals_env","text":"modified parameter series incorporates appropriate time varying environmental effects.","code":""},{"path":"/reference/update_basevals_env.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update a sequence of base parameter annual values to account for a time varying environmental effects — update_basevals_env","text":"Nathan Vaughan","code":""}]
